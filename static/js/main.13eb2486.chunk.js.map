{"version":3,"sources":["constants/SETTINGS.js","models/Phase.js","models/Item.js","constants/ITEM_REGISTRY.js","models/Inventory.js","models/Player.js","models/Cell.js","components/CellTile.tsx","components/Map.js","components/StatusBar.tsx","components/ActionBar.tsx","components/ItemTile.tsx","components/InventoryBar.js","components/CellBar.js","components/CraftBar.js","models/Tiletype.js","constants/TILETYPE_REGISTRY.js","components/Game.js","components/App.js","reportWebVitals.js","index.js"],"names":["SETTINGS","x","y","Phase","untilTextTurn","this","turn","isNight","Item","id","name","frequency","ITEM_REGISTRY","generateItemSubset","itemSubset","i","length","push","Inventory","inventorySize","size","slots","Array","Player","hp","ap","coords","inventory","Cell","type","characters","items","CellTile","styled","button","props","color","Map","Cells","row","tiles","col","handleClickTileBound","onClick","bind","React","Component","StatusBar","phase","ActionBar","className","value","ItemTile","input","InventoryBar","itemListComponents","handleClickItemInventoryBound","CellBar","handleClickItemTileBound","class","CraftBar","Tiletype","TILETYPE_REGISTRY","Game","initialTiles","initialCharacters","initialPhase","state","handleClickTile","handleClickSearch","handleClickItemInventory","handleClickItemTile","setInterval","gameLoop","updatedPhase","setState","updatedCharacters","rowSpan","colSpan","distCellToCharacter","oldX","oldY","updatedTiles","alert","fillPosition","randomIndex","Math","floor","random","randomNumber","randomItem","console","log","generateItem","slot","splice","max","abs","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13eb2486.chunk.js","sourcesContent":["export const SETTINGS = {\r\n  DURATION_TURN: 5,\r\n  POSITION_START: { x: 5, y: 5 },\r\n  INVENTORY_SIZE: 6,\r\n  PLAYER_HP_MAX: 100,\r\n  PLAYER_AP_MAX: 4,\r\n  ITEM_SEARCH_FREQUENCY_THRESHOLDS: [\r\n    0,\r\n    60,\r\n    90,\r\n    100,\r\n    100,\r\n    100,\r\n    100,\r\n    100,\r\n    100,\r\n    100,\r\n    100,\r\n  ],\r\n};\r\n","import { SETTINGS } from \"../constants/SETTINGS.js\";\r\n\r\nexport class Phase {\r\n  constructor() {\r\n    this.turn = 1;\r\n    this.isNight = false;\r\n  }\r\n  untilTextTurn = SETTINGS.DURATION_TURN;\r\n}\r\n","export class Item {\r\n  constructor(id, name, frequency) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.frequency = frequency;\r\n  }\r\n}\r\n","import { Item } from \"../models/Item.js\";\r\nimport { SETTINGS } from \"./SETTINGS.js\";\r\n\r\nexport const ITEM_REGISTRY = [\r\n  new Item(0, \" \", -1),\r\n  new Item(1, \"Log\", 0),\r\n  new Item(2, \"Plank\", 1),\r\n  new Item(3, \"Iron Ore\", 2),\r\n  new Item(4, \"Iron Bar\", 1),\r\n  new Item(5, \"Iron Sheet\", 2),\r\n  new Item(6, \"Broken Circuit Board\", 1),\r\n  new Item(7, \"Electronic Component\", 2),\r\n  new Item(8, \"Transistor Radio\", 999),\r\n];\r\n\r\nexport const generateItem = () => {\r\n  const randomNumber = 100 * Math.random();\r\n  for (\r\n    let frequency = 0;\r\n    frequency < SETTINGS.ITEM_SEARCH_FREQUENCY_THRESHOLDS.length - 1;\r\n    frequency++\r\n  ) {\r\n    if (\r\n      randomNumber > SETTINGS.ITEM_SEARCH_FREQUENCY_THRESHOLDS[frequency] &&\r\n      randomNumber < SETTINGS.ITEM_SEARCH_FREQUENCY_THRESHOLDS[frequency + 1]\r\n    ) {\r\n      const itemSubset = generateItemSubset(frequency);\r\n      const randomIndex = Math.floor(Math.random() * itemSubset.length);\r\n      const randomItem = itemSubset[randomIndex];\r\n      console.log(randomNumber + \"    \" + frequency + \"    \" + randomItem);\r\n      return randomItem;\r\n    }\r\n  }\r\n};\r\n\r\nconst generateItemSubset = (frequency) => {\r\n  let itemSubset = [];\r\n  for (let i = 0; i < ITEM_REGISTRY.length; i++) {\r\n    if (ITEM_REGISTRY[i].frequency === frequency) {\r\n      itemSubset.push(ITEM_REGISTRY[i]);\r\n    }\r\n  }\r\n  return itemSubset;\r\n};\r\n","import { ITEM_REGISTRY } from \"../constants/ITEM_REGISTRY.js\";\r\n\r\nexport class Inventory {\r\n  constructor(inventorySize) {\r\n    this.size = inventorySize;\r\n    this.slots = new Array(inventorySize);\r\n    for (var i = 0; i < this.slots.length; i++) {\r\n      this.slots[i] = ITEM_REGISTRY[0];\r\n    }\r\n  }\r\n}\r\n","import { Inventory } from \"./Inventory.js\";\r\n\r\nexport class Player {\r\n  constructor(hp, ap, x, y) {\r\n    this.hp = hp;\r\n    this.ap = ap;\r\n    this.coords = {\r\n      x: x,\r\n      y: y,\r\n    };\r\n    this.inventory = new Inventory(6);\r\n  }\r\n}\r\n","export class Cell {\r\n  constructor(type, x, y) {\r\n    this.type = type;\r\n    this.coords = {\r\n      x: x,\r\n      y: y,\r\n    };\r\n    this.characters = [];\r\n    this.items = [];\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\nimport { Player } from \"../models/Player\";\r\nimport { Tiletype } from \"../models/Tiletype\";\r\n\r\ninterface CellTileProps {\r\n  characters: Player[];\r\n  type: Tiletype;\r\n}\r\n\r\nexport const CellTile = styled.button<CellTileProps>`\r\n  width: 50px;\r\n  height: 50px;\r\n  font-size: ${(props) => (props.characters.length === 0 ? \"8px\" : \"8px\")};\r\n  background: ${(props) =>\r\n    props.characters.length === 0\r\n      ? props.type.color\r\n      : \"repeating-linear-gradient(45deg, white, white 10px, \" +\r\n        props.type.color +\r\n        \" 10px,  \" +\r\n        props.type.color +\r\n        \" 20px)\"};\r\n  color: ${(props) => (props.characters.length === 0 ? \"black\" : \"white\")};\r\n  font-weight: ${(props) =>\r\n    props.characters.length === 0 ? \"normal\" : \"bold\"};\r\n  border: 1px solid white;\r\n  border-collapse: collapse;\r\n`;\r\n","import React from \"react\";\r\nimport { CellTile } from \"./CellTile.tsx\";\r\n\r\nexport class Map extends React.Component {\r\n  render() {\r\n    var Cells = [];\r\n    for (var row = 0; row < this.props.tiles.length; row++) {\r\n      for (var col = 0; col < this.props.tiles[row].length; col++) {\r\n        var handleClickTileBound = this.props.onClick.bind(this, col, row);\r\n        Cells.push(\r\n          <CellTile\r\n            key={\"Cell\" + col + \":\" + row}\r\n            coords={{ x: col, y: row }}\r\n            type={this.props.tiles[col][row].type}\r\n            characters={this.props.tiles[col][row].characters}\r\n            onClick={handleClickTileBound}\r\n          >\r\n            {this.props.tiles[col][row].characters.length !== 0\r\n              ? \"X\"\r\n              : \"(\" + col + \",\" + row + \")\"}\r\n          </CellTile>\r\n        );\r\n      }\r\n      Cells.push(<br key={\"LineBreak\" + row} />);\r\n    }\r\n    return Cells;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Phase } from \"../models/Phase.js\";\r\nimport { Player } from \"../models/Player.js\";\r\nimport { SETTINGS } from \"../constants/SETTINGS.js\";\r\n\r\ninterface StatusBarProps {\r\n  phase: Phase;\r\n  characters: Player[];\r\n}\r\n\r\nexport class StatusBar extends React.Component<StatusBarProps> {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <b>Status bar</b>\r\n        <br />\r\n        Turn: {this.props.phase.turn} (00:00:0{this.props.phase.untilTextTurn})\r\n        <br />\r\n        Action points: {this.props.characters[0].ap} / {SETTINGS.PLAYER_AP_MAX}\r\n        <br />\r\n        Health points: {this.props.characters[0].hp} / {SETTINGS.PLAYER_HP_MAX}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\ninterface ActionBarProps {\r\n  onClick: React.MouseEventHandler;\r\n}\r\n\r\nexport class ActionBar extends React.Component<ActionBarProps> {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <b>Actions</b>\r\n        <br />\r\n        <input\r\n          className=\"action\"\r\n          type=\"button\"\r\n          value=\"Search\"\r\n          onClick={this.props.onClick}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const ItemTile = styled.input`\r\n  width: 150px;\r\n  height: 40px;\r\n  margin: 3px 3px 3px 3px;\r\n  background-color: rgb(225, 137, 155);\r\n`;\r\n","import React from \"react\";\r\nimport { ItemTile } from \"./ItemTile\";\r\n\r\nexport class InventoryBar extends React.Component {\r\n  render() {\r\n    var itemListComponents = new Array(this.props.characters[0].inventory.size);\r\n    for (var i = 0; i < itemListComponents.length; i++) {\r\n      var handleClickItemInventoryBound = this.props.onClick.bind(this, i);\r\n      itemListComponents[i] = (\r\n        <ItemTile\r\n          type=\"submit\"\r\n          key={\"ItemInventoryInput\" + i}\r\n          value={this.props.characters[0].inventory.slots[i].name}\r\n          onClick={handleClickItemInventoryBound}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <b>Inventory</b>\r\n        <br />\r\n        {itemListComponents}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { ItemTile } from \"./ItemTile\";\r\n\r\nexport class CellBar extends React.Component {\r\n  render() {\r\n    var x = this.props.characters[0].coords.x;\r\n    var y = this.props.characters[0].coords.y;\r\n    var itemListComponents = new Array(this.props.tiles[x][y].items);\r\n    for (var i = 0; i < this.props.tiles[x][y].items.length; i++) {\r\n      var handleClickItemTileBound = this.props.onClick.bind(this, i);\r\n      itemListComponents[i] = (\r\n        <ItemTile\r\n          className=\"item\"\r\n          type=\"submit\"\r\n          key={\"ItemTileInput\" + i}\r\n          value={this.props.tiles[x][y].items[i].name}\r\n          onClick={handleClickItemTileBound}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <b>\r\n          {this.props.tiles[x][y].type.name} ({x}, {y})\r\n        </b>\r\n        <br />\r\n        <div class=\"item-panel\">{itemListComponents}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport class CraftBar extends React.Component{\r\n    render(){      \r\n      return( \r\n        <div>\r\n          <b>Craft</b><br/>                  \r\n        </div>\r\n      )\r\n    }\r\n  }","export class Tiletype {\r\n  constructor(id, name, color) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.color = color;\r\n  }\r\n}\r\n","import { Tiletype } from \"../models/Tiletype.js\";\r\n\r\nexport const TILETYPE_REGISTRY = [\r\n  new Tiletype(0, \"Forest\", \"#32a871\"),\r\n  new Tiletype(1, \"Starship\", \"#929da6\"),\r\n  new Tiletype(2, \"Impact Cleaning\", \"#76a693\"),\r\n];\r\n","import React from \"react\";\r\nimport \"../styles/App.css\";\r\n\r\nimport { Phase } from \"../models/Phase.js\";\r\nimport { Player } from \"../models/Player.js\";\r\nimport { Cell } from \"../models/Cell.js\";\r\n\r\nimport { Map } from \"./Map.js\";\r\nimport { StatusBar } from \"./StatusBar.tsx\";\r\nimport { ActionBar } from \"./ActionBar.tsx\";\r\nimport { InventoryBar } from \"./InventoryBar.js\";\r\nimport { CellBar } from \"./CellBar.js\";\r\nimport { CraftBar } from \"./CraftBar.js\";\r\n\r\nimport { SETTINGS } from \"../constants/SETTINGS.js\";\r\nimport { ITEM_REGISTRY, generateItem } from \"../constants/ITEM_REGISTRY.js\";\r\nimport { TILETYPE_REGISTRY } from \"../constants/TILETYPE_REGISTRY\";\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Set initial tiles\r\n    var initialTiles = new Array(11);\r\n    for (var col = 0; col < initialTiles.length; col++) {\r\n      initialTiles[col] = new Array(11);\r\n      for (var row = 0; row < initialTiles[col].length; row++) {\r\n        initialTiles[col][row] = new Cell(TILETYPE_REGISTRY[0], col, row);\r\n      }\r\n    }\r\n\r\n    initialTiles[5][5].characters.push(\r\n      new Player(\r\n        SETTINGS.PLAYER_HP_MAX,\r\n        SETTINGS.PLAYER_AP_MAX,\r\n        SETTINGS.POSITION_START.x,\r\n        SETTINGS.POSITION_START.y\r\n      )\r\n    );\r\n    initialTiles[5][5].type = TILETYPE_REGISTRY[1];\r\n    initialTiles[4][4].type = TILETYPE_REGISTRY[2];\r\n    initialTiles[5][4].type = TILETYPE_REGISTRY[2];\r\n    initialTiles[6][4].type = TILETYPE_REGISTRY[2];\r\n    initialTiles[4][5].type = TILETYPE_REGISTRY[2];\r\n    initialTiles[6][5].type = TILETYPE_REGISTRY[2];\r\n    initialTiles[4][6].type = TILETYPE_REGISTRY[2];\r\n    initialTiles[5][6].type = TILETYPE_REGISTRY[2];\r\n    initialTiles[6][6].type = TILETYPE_REGISTRY[2];\r\n\r\n    // Set initial characters\r\n    var initialCharacters = [];\r\n    initialCharacters.push(\r\n      new Player(\r\n        SETTINGS.PLAYER_HP_MAX,\r\n        SETTINGS.PLAYER_AP_MAX,\r\n        SETTINGS.POSITION_START.x,\r\n        SETTINGS.POSITION_START.y\r\n      )\r\n    );\r\n\r\n    // Set initial phase\r\n    var initialPhase = new Phase();\r\n\r\n    this.state = {\r\n      tiles: initialTiles,\r\n      characters: initialCharacters,\r\n      phase: initialPhase,\r\n    };\r\n\r\n    this.handleClickTile = this.handleClickTile.bind(this);\r\n    this.handleClickSearch = this.handleClickSearch.bind(this);\r\n    this.handleClickItemInventory = this.handleClickItemInventory.bind(this);\r\n    this.handleClickItemTile = this.handleClickItemTile.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    setInterval(this.gameLoop.bind(this), 1000);\r\n  }\r\n\r\n  gameLoop() {\r\n    if (this.state.phase.untilTextTurn > 1) {\r\n      let updatedPhase = this.state.phase;\r\n      updatedPhase.untilTextTurn -= 1;\r\n\r\n      this.setState(updatedPhase);\r\n    } else {\r\n      let updatedPhase = this.state.phase;\r\n      updatedPhase.turn += 1;\r\n      updatedPhase.untilTextTurn = SETTINGS.DURATION_TURN;\r\n\r\n      let updatedCharacters = this.state.characters;\r\n      updatedCharacters[0].ap < 4 && (updatedCharacters[0].ap += 1);\r\n\r\n      this.setState(updatedCharacters);\r\n      this.setState(updatedPhase);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <td rowSpan=\"3\">\r\n              <Map tiles={this.state.tiles} onClick={this.handleClickTile} />\r\n            </td>\r\n            <td colSpan=\"3\" className=\"aux-window\">\r\n              <StatusBar\r\n                phase={this.state.phase}\r\n                characters={this.state.characters}\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td colSpan=\"3\" className=\"aux-window\">\r\n              <ActionBar onClick={this.handleClickSearch} />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"aux-window\">\r\n              <InventoryBar\r\n                characters={this.state.characters}\r\n                onClick={this.handleClickItemInventory}\r\n              />\r\n            </td>\r\n            <td className=\"aux-window\">\r\n              <CellBar\r\n                tiles={this.state.tiles}\r\n                characters={this.state.characters}\r\n                onClick={this.handleClickItemTile}\r\n              />\r\n            </td>\r\n            <td className=\"aux-window\">\r\n              <CraftBar />\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  handleClickTile(col, row) {\r\n    if (this.state.characters[0].ap > 0) {\r\n      if (this.distCellToCharacter(col, row) === 1) {\r\n        let updatedCharacters = this.state.characters;\r\n        updatedCharacters[0].ap -= 1;\r\n\r\n        const oldX = this.state.characters[0].coords.x;\r\n        const oldY = this.state.characters[0].coords.y;\r\n\r\n        updatedCharacters[0].coords = {\r\n          x: col,\r\n          y: row,\r\n        };\r\n\r\n        let updatedTiles = this.state.tiles;\r\n        updatedTiles[oldX][oldY].characters = [];\r\n        updatedTiles[col][row].characters.push(updatedCharacters[0]);\r\n\r\n        this.setState(updatedCharacters);\r\n        this.setState(updatedTiles);\r\n      }\r\n    } else {\r\n      alert(\"You are out of action points\");\r\n    }\r\n  }\r\n\r\n  handleClickSearch() {\r\n    if (this.state.characters[0].ap > 0) {\r\n      let updatedCharacters = this.state.characters;\r\n      updatedCharacters[0].ap -= 1;\r\n\r\n      let fillPosition = -1;\r\n      for (let i = 0; i < this.state.characters[0].inventory.size; i++) {\r\n        if (this.state.characters[0].inventory.slots[i] === ITEM_REGISTRY[0]) {\r\n          fillPosition = i;\r\n          break;\r\n        }\r\n      }\r\n\r\n      const randomIndex = Math.floor(Math.random() * ITEM_REGISTRY.length);\r\n      if (fillPosition !== -1) {\r\n        updatedCharacters[0].inventory.slots[fillPosition] = generateItem();\r\n\r\n        this.setState(updatedCharacters);\r\n      } else {\r\n        let updatedTiles = this.state.tiles;\r\n        const x = this.state.characters[0].coords.x;\r\n        const y = this.state.characters[0].coords.y;\r\n        updatedTiles[x][y].items.push(ITEM_REGISTRY[randomIndex]);\r\n\r\n        this.setState(updatedTiles);\r\n      }\r\n    } else {\r\n      alert(\"You are out of action points\");\r\n    }\r\n  }\r\n\r\n  handleClickItemInventory(slot) {\r\n    if (\r\n      this.state.characters[0].inventory.slots[slot].id !== ITEM_REGISTRY[0].id\r\n    ) {\r\n      const x = this.state.characters[0].coords.x;\r\n      const y = this.state.characters[0].coords.y;\r\n\r\n      let updatedCharacters = this.state.characters;\r\n      let updatedTiles = this.state.tiles;\r\n\r\n      updatedTiles[x][y].items.push(\r\n        this.state.characters[0].inventory.slots[slot]\r\n      );\r\n      updatedCharacters[0].inventory.slots[slot] = ITEM_REGISTRY[0];\r\n\r\n      this.setState(updatedCharacters);\r\n      this.setState(updatedTiles);\r\n    }\r\n  }\r\n\r\n  handleClickItemTile(slot) {\r\n    let fillPosition = -1;\r\n    for (var i = 0; i < this.state.characters[0].inventory.size; i++) {\r\n      if (this.state.characters[0].inventory.slots[i] === ITEM_REGISTRY[0]) {\r\n        fillPosition = i;\r\n        break;\r\n      }\r\n    }\r\n    if (fillPosition !== -1) {\r\n      const x = this.state.characters[0].coords.x;\r\n      const y = this.state.characters[0].coords.y;\r\n\r\n      let updatedCharacters = this.state.characters;\r\n      let updatedTiles = this.state.tiles;\r\n\r\n      updatedCharacters[0].inventory.slots[fillPosition] =\r\n        this.state.tiles[x][y].items[slot];\r\n      updatedTiles[x][y].items.splice(slot, 1);\r\n\r\n      this.setState(updatedCharacters);\r\n      this.setState(updatedTiles);\r\n    }\r\n  }\r\n\r\n  distCellToCharacter(col, row) {\r\n    return Math.max(\r\n      Math.abs(\r\n        this.state.tiles[col][row].coords.x - this.state.characters[0].coords.x\r\n      ),\r\n      Math.abs(\r\n        this.state.tiles[col][row].coords.y - this.state.characters[0].coords.y\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\";\nimport \"../styles/App.css\";\nimport Game from \"./Game.js\";\n\nfunction App() {\n  return <Game />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}