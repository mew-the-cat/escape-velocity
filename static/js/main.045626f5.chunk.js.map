{"version":3,"sources":["constants/ALERT_VARIANTS.ts","components/TileCard.tsx","components/Map.tsx","constants/SETTINGS.ts","components/StatusBar.tsx","components/ActionTile.tsx","components/ActionBar.tsx","components/AlertBar.tsx","models/AlertText.ts","constants/ALERT_TEXTS.ts","types/ItemRarity.ts","models/Blueprint.ts","models/Item.ts","constants/ITEMS.ts","styles/Colors.ts","constants/BLUEPRINTS.ts","models/Tiletype.ts","constants/TILETYPES.ts","models/Tile.ts","models/Phase.ts","models/Player.ts","models/UserPrompt.ts","models/Construction.ts","utils/ItemUtils.ts","components/ItemCard.tsx","components/InventoryBarList.tsx","components/InventoryBarWrapper.tsx","components/TileBarList.tsx","components/TileBarWrapper.tsx","components/CraftBarList.tsx","components/CraftBarWrapper.tsx","components/ItemBar.tsx","models/CraftCombination.ts","constants/CRAFT_COMBINATIONS.ts","components/BlueprintItem.tsx","components/ConstructionCard.tsx","components/ConstructionCardWrapper.tsx","components/ConstructionBar.tsx","components/Game.tsx","utils/GameUtils.ts","components/App.tsx","reportWebVitals.js","index.js"],"names":["ALERT_VARIANT","TileCard","styled","button","props","characters","length","tiletype","color","Map","tiles","onClick","Cells","row","col","handleClickTileBound","bind","push","type","className","SETTINGS","x","y","StatusBar","phase","turn","untilNextTurn","ap","hp","ActionTile","input","ActionBar","isInside","onClickSearch","onClickCraft","value","AlertBar","alertText","isVisible","Alert","show","variant","Heading","header","body","AlertText","this","ItemRarity","ALERT_TEXTS","START","PRIMARY","OUT_OF_AP","WARNING","NO_SEARCH_ZONE","CRAFT_NO_COMBINATION","CRAFT_NO_ITEMS","CRAFT_SUCCESS","SUCCESS","CONSTRUCTION_NO_ITEMS","CONSTRUCTION_SUCCESS","VICTORY","Blueprint","id","name","defenseBase","itemsToConstruct","Item","rarity","Colors","ITEMS","UBIQUITOUS","COMMON","RARE","UNCOMMON","SCARCE","UNIQUE","BLUEPRINTS","Tiletype","TILETYPES","Tile","coords","items","Phase","isNight","Player","itemsMax","UserPromt","alertActive","untilAlertDismissed","Construction","blueprint","amount","generateItem","randomRarityGroupItems","getRarityGroupItems","randomizeRarityGroup","Math","floor","random","itemSubset","i","randomNumber","ItemCard","p","ITEM_UBIQUITOUS","ITEM_COMMON","ITEM_UNCOMMON","ITEM_RARE","ITEM_SCARCE","ITEM_UNIQUE","InventoryBarList","droppableId","isDropDisabled","provided","droppableProps","ref","innerRef","map","item","index","draggableId","draggableProps","dragHandleProps","placeholder","InventoryBarWrapper","onDragEnd","TileBarList","TileBarWrapper","CraftBarList","construction","CraftBarWrapper","ItemBar","onClickInventory","onClickCell","CraftCombination","itemCombination","itemResult","CRAFT_COMBINATIONS","BlueprintItem","div","ConstructionCard","CONSTRUCTIONS_BUILT","CONSTRUCTIONS_NOT_BUILT","CONSTRUCTIONS_BUILT_BORDER","CONSTRUCTIONS_NOT_BUILT_BORDER","ConstructionCardWrapper","defenseTotal","colSpan","ConstructionBar","constructions","Game","initialState","initialTiles","Array","initialCharacters","initialPhase","initialConstructions","engineeringBay","starship","emergencyBeaconUnfinished","userPrompt","generateInitialState","useState","setCharacters","setPhase","setTiles","setConstructions","setUserPrompt","setIsInside","gameLoop","updatedCharacters","updatedPhase","updatedUserPrompt","handleDisplayAlert","alert","distCellToCharacter","max","abs","useEffect","setInterval","updatedTiles","oldX","oldY","slot","splice","result","destination","updatedConstruction","source","from","reorderedItem","itemsSource","itemsDestination","areAllItemsPresent","itemCheckTemporaryPool","itemToConstruct","includes","indexOf","updatedConstructions","isCraftSuccessful","forEach","craftCombination","itemCheckSuccessful","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.045626f5.chunk.js","sourcesContent":["export enum ALERT_VARIANT {\r\n  WARNING = \"warning\",\r\n  PRIMARY = \"primary\",\r\n  SUCCESS = \"success\",\r\n  VICTORY = \"info\",\r\n}\r\n","import styled from \"styled-components\";\r\nimport { Player } from \"../models/Player\";\r\nimport { Tiletype } from \"../models/Tiletype\";\r\n\r\ninterface TileCardProps {\r\n  characters: Player[];\r\n  tiletype: Tiletype;\r\n  onClick: React.MouseEventHandler;\r\n}\r\n\r\nexport const TileCard = styled.button<TileCardProps>`\r\n  width: 9%;\r\n  height: 9%;\r\n  font-size: ${(props) => (props.characters.length === 0 ? \"8px\" : \"8px\")};\r\n  background: ${(props) =>\r\n    props.characters.length === 0\r\n      ? props.tiletype.color\r\n      : \"repeating-linear-gradient(45deg, white, white 10px, \" +\r\n        props.tiletype.color +\r\n        \" 10px,  \" +\r\n        props.tiletype.color +\r\n        \" 20px)\"};\r\n  color: ${(props) => (props.characters.length === 0 ? \"black\" : \"white\")};\r\n  font-weight: ${(props) =>\r\n    props.characters.length === 0 ? \"normal\" : \"bold\"};\r\n  border: 1px solid white;\r\n  border-collapse: collapse;\r\n  border-radius: 5px;\r\n`;\r\n","import React from \"react\";\r\nimport { Tile } from \"../models/Tile\";\r\nimport { TileCard } from \"./TileCard\";\r\n\r\ninterface MapProps {\r\n  tiles: Tile[][];\r\n  onClick: (col: number, row: number) => void;\r\n}\r\n\r\nexport const Map: React.FC<MapProps> = ({ tiles, onClick }) => {\r\n  const Cells = [];\r\n\r\n  for (let row = 0; row < tiles.length; row++) {\r\n    for (let col = 0; col < tiles[row].length; col++) {\r\n      const handleClickTileBound = onClick.bind(this, col, row);\r\n      Cells.push(\r\n        <TileCard\r\n          key={\"Cell\" + col + \":\" + row}\r\n          tiletype={tiles[col][row].type}\r\n          characters={tiles[col][row].characters}\r\n          onClick={handleClickTileBound}\r\n        >\r\n          {tiles[col][row].characters.length !== 0\r\n            ? \"X\"\r\n            : \"(\" + col + \",\" + row + \")\"}\r\n        </TileCard>\r\n      );\r\n    }\r\n    Cells.push(<br key={\"LineBreak\" + row} />);\r\n  }\r\n  return <span className=\"map\">{Cells}</span>;\r\n};\r\n","export const SETTINGS = {\r\n  DURATION_TURN: 3,\r\n  POSITION_START: { x: 5, y: 5 },\r\n  INVENTORY_SIZE: 6,\r\n  PLAYER_HP_MAX: 100,\r\n  PLAYER_AP_MAX: 20,\r\n  DURATION_ALERT: 5,\r\n};\r\n","import React from \"react\";\r\nimport { Phase } from \"../models/Phase\";\r\nimport { Player } from \"../models/Player.js\";\r\nimport { SETTINGS } from \"../constants/SETTINGS\";\r\n\r\ninterface StatusBarProps {\r\n  phase: Phase;\r\n  characters: Player[];\r\n}\r\n\r\nexport const StatusBar: React.FC<StatusBarProps> = ({ phase, characters }) => {\r\n  return (\r\n    <span className=\"statusbar\">\r\n      <b>Status bar</b>\r\n      <br />\r\n      Turn: {phase.turn} (00:00:0{phase.untilNextTurn})\r\n      <br />\r\n      Action Points: {characters[0].ap} / {SETTINGS.PLAYER_AP_MAX}\r\n      <br />\r\n      Health Points: {characters[0].hp} / {SETTINGS.PLAYER_HP_MAX}\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </span>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\ninterface ActionTileProps {\r\n  type: string;\r\n  value: string;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const ActionTile = styled.input<ActionTileProps>`\r\n  width: 150px;\r\n  height: 40px;\r\n  margin: 3px 3px 3px 3px;\r\n  background-color: rgb(102, 217, 255);\r\n  border-radius: 5px;\r\n  border: 2px solid rgb(204, 242, 255);\r\n  color: white;\r\n  font-size: 14px;\r\n`;\r\n","import React from \"react\";\r\nimport { ActionTile } from \"./ActionTile\";\r\n\r\ninterface ActionBarProps {\r\n  isInside: boolean;\r\n  onClickSearch: () => void;\r\n  onClickCraft: () => void;\r\n}\r\n\r\nexport const ActionBar: React.FC<ActionBarProps> = ({\r\n  isInside,\r\n  onClickSearch,\r\n  onClickCraft,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <b>Actions</b>\r\n      <br />\r\n      <ActionTile type=\"button\" value=\"Search\" onClick={onClickSearch} />\r\n      {isInside && (\r\n        <ActionTile type=\"button\" value=\"Craft\" onClick={onClickCraft} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { AlertText } from \"../models/AlertText\";\r\n\r\ninterface AlertBarProps {\r\n  alertText: AlertText;\r\n  isVisible: boolean;\r\n}\r\n\r\nexport const AlertBar: React.FC<AlertBarProps> = ({ alertText, isVisible }) => {\r\n  return (\r\n    <span className=\"alertbar\">\r\n      <Alert key=\"mainAlert\" show={isVisible} variant={alertText.variant}>\r\n        <Alert.Heading>{alertText.header}</Alert.Heading>\r\n        {alertText.body}\r\n      </Alert>\r\n    </span>\r\n  );\r\n};\r\n","export class AlertText {\r\n  header: string;\r\n  body: string;\r\n  variant: string;\r\n\r\n  constructor(header: string, body: string, variant: string) {\r\n    this.header = header;\r\n    this.body = body;\r\n    this.variant = variant;\r\n  }\r\n}\r\n","import { AlertText } from \"../models/AlertText\";\r\nimport { ALERT_VARIANT } from \"./ALERT_VARIANTS\";\r\n\r\nexport const ALERT_TEXTS = {\r\n  START: new AlertText(\r\n    \"Your starship was heavily damaged during an orbital fight...\",\r\n    \"Pilots managed to perform an emergency landing on the planet below. The vessel is irreversibly damaged. Fellow crew is dead. Endless jungle covering the entire surface.\",\r\n    ALERT_VARIANT.PRIMARY\r\n  ),\r\n  OUT_OF_AP: new AlertText(\r\n    \"Out of Action Points\",\r\n    \"You are too tired to perform this action and need to chill for a  while. AP recover with time. Action Points recover gradually with time.\",\r\n    ALERT_VARIANT.WARNING\r\n  ),\r\n  NO_SEARCH_ZONE: new AlertText(\r\n    \"Can't Search the Starship\",\r\n    \"It's your old school ship you have flown half of the Galaxy with! You know every single crack and fissure. There is nothing surpsiring you can find. Try exploring the planet surface instead.\",\r\n    ALERT_VARIANT.WARNING\r\n  ),\r\n  CRAFT_NO_COMBINATION: new AlertText(\r\n    \"Engeneering Attempt Failed\",\r\n    \"You tried to tinker around with these items with no palpable success. It looks like you can't combine them into anything more or less interesting.\",\r\n    ALERT_VARIANT.WARNING\r\n  ),\r\n  CRAFT_NO_ITEMS: new AlertText(\r\n    \"No Enough Items\",\r\n    \"Load at least 2 items in the Engineering Bay in order to process them.\",\r\n    ALERT_VARIANT.WARNING\r\n  ),\r\n  CRAFT_SUCCESS: new AlertText(\r\n    \"Engeneering Attempt Successful\",\r\n    \"You managed to process materials into a structurally more complex item!\",\r\n    ALERT_VARIANT.SUCCESS\r\n  ),\r\n  CONSTRUCTION_NO_ITEMS: new AlertText(\r\n    \"No Enough Items\",\r\n    \"Some items required in the blueprint are missing. Ensure to store them in the starhip storage [5, 5].\",\r\n    ALERT_VARIANT.WARNING\r\n  ),\r\n  CONSTRUCTION_SUCCESS: new AlertText(\r\n    \"Construction Successful\",\r\n    \"You have managed to build a new construction according to the blueprint!\",\r\n    ALERT_VARIANT.SUCCESS\r\n  ),\r\n  VICTORY: new AlertText(\r\n    \"Emergency Beacon is Online [VICTORY]\",\r\n    \"This piece of scrap assembled with glue and duct tape on your knees seems to work! After 4 nervous hours of waiting amid the endleess forest a rescue spacecraft appears on the horizon. You desperate call hor help wa heard. You got a ticket out of this hell!\",\r\n    ALERT_VARIANT.VICTORY\r\n  ),\r\n};\r\n","export enum ItemRarity {\r\n  UBIQUITOUS = \"UBIQUITOUS\",\r\n  COMMON = \"COMMON\",\r\n  UNCOMMON = \"UNCOMMON\",\r\n  RARE = \"RARE\",\r\n  SCARCE = \"SCARCE\",\r\n  UNIQUE = \"UNIQUE\",\r\n}\r\n","import { Item } from \"./Item\";\r\n\r\nexport class Blueprint {\r\n  id: number;\r\n  name: string;\r\n  defenseBase: number;\r\n  itemsToConstruct?: Item[];\r\n\r\n  constructor(\r\n    id: number,\r\n    name: string,\r\n    defenseBase: number,\r\n    itemsToConstruct?: Item[]\r\n  ) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.defenseBase = defenseBase;\r\n    this.itemsToConstruct = itemsToConstruct;\r\n  }\r\n}\r\n","import { ItemRarity } from \"../types/ItemRarity\";\r\n\r\nexport class Item {\r\n  id: number;\r\n  name: string;\r\n  rarity: ItemRarity;\r\n\r\n  constructor(id: number, name: string, rarity: ItemRarity) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.rarity = rarity;\r\n  }\r\n}\r\n","import { Item } from \"../models/Item\";\r\nimport { ItemRarity } from \"../types/ItemRarity\";\r\n\r\nexport const ITEMS = [\r\n  new Item(0, \"Log\", ItemRarity.UBIQUITOUS),\r\n  new Item(1, \"Plank\", ItemRarity.COMMON),\r\n  new Item(2, \"Wooden Beam\", ItemRarity.RARE),\r\n  new Item(3, \"Iron Ore\", ItemRarity.COMMON),\r\n  new Item(4, \"Iron Bar\", ItemRarity.UNCOMMON),\r\n  new Item(5, \"Iron Sheet\", ItemRarity.RARE),\r\n  new Item(6, \"Broken Circuit Board\", ItemRarity.UNCOMMON),\r\n  new Item(7, \"Electronic Plate\", ItemRarity.SCARCE),\r\n  new Item(8, \"Transistor Radio\", ItemRarity.UNIQUE),\r\n  new Item(9, \"Copper Ore\", ItemRarity.COMMON),\r\n  new Item(10, \"Copper Wire\", ItemRarity.SCARCE),\r\n  new Item(11, \"Antenna\", ItemRarity.UNIQUE),\r\n];\r\n","export enum Colors {\r\n  ITEM_UBIQUITOUS = \"rgb(206, 188, 160)\",\r\n  ITEM_COMMON = \"rgb(148, 148, 184)\",\r\n  ITEM_UNCOMMON = \"rgb(151, 184, 250)\",\r\n  ITEM_RARE = \"rgb(255, 181, 54)\",\r\n  ITEM_SCARCE = \"rgb(242, 114, 114)\",\r\n  ITEM_UNIQUE = \"rgb(227, 0, 91)\",\r\n  CONSTRUCTIONS_BUILT = \"rgb(92, 92, 92)\",\r\n  CONSTRUCTIONS_BUILT_BORDER = \"rgb(0, 0, 0)\",\r\n  CONSTRUCTIONS_NOT_BUILT = \"rgb(238, 238, 238)\",\r\n  CONSTRUCTIONS_NOT_BUILT_BORDER = \"rgb(199, 199, 199)\",\r\n}\r\n","import { Blueprint } from \"../models/Blueprint\";\r\nimport { ITEMS } from \"./ITEMS\";\r\n\r\nexport const BLUEPRINTS = [\r\n  new Blueprint(0, \"Starship\", 100),\r\n  new Blueprint(1, \"Engineering Bay\", 20),\r\n  new Blueprint(2, \"Emergency Beacon\", 0, [\r\n    ITEMS[11],\r\n    ITEMS[8],\r\n    ITEMS[5],\r\n    ITEMS[2],\r\n  ]),\r\n];\r\n","export class Tiletype {\r\n  id: number;\r\n  name: string;\r\n  color: string;\r\n\r\n  constructor(id: number, name: string, color: string) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.color = color;\r\n  }\r\n}\r\n","import { Tiletype } from \"../models/Tiletype\";\r\n\r\nexport const TILETYPES = [\r\n  new Tiletype(0, \"Forest\", \"#32a871\"),\r\n  new Tiletype(1, \"Starship\", \"#929da6\"),\r\n  new Tiletype(2, \"Impact Cleaning\", \"#76a693\"),\r\n];\r\n","import { Item } from \"./Item\";\r\nimport { Player } from \"./Player\";\r\nimport { Tiletype } from \"./Tiletype\";\r\n\r\nexport class Tile {\r\n  type: Tiletype;\r\n  coords: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n  characters: Player[];\r\n  items: Item[];\r\n\r\n  constructor(type: Tiletype, x: number, y: number) {\r\n    this.type = type;\r\n    this.coords = {\r\n      x: x,\r\n      y: y,\r\n    };\r\n    this.characters = [];\r\n    this.items = [];\r\n  }\r\n}\r\n","import { SETTINGS } from \"../constants/SETTINGS\";\r\n\r\nexport class Phase {\r\n  turn: number;\r\n  untilNextTurn: number;\r\n  isNight: boolean;\r\n\r\n  constructor() {\r\n    this.turn = 1;\r\n    this.untilNextTurn = SETTINGS.DURATION_TURN - 1;\r\n    this.isNight = false;\r\n  }\r\n}\r\n","import { Item } from \"./Item\";\r\n\r\nexport class Player {\r\n  id: number;\r\n  hp: number;\r\n  ap: number;\r\n  coords: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n  items: Item[];\r\n  itemsMax: number;\r\n\r\n  constructor(\r\n    id: number,\r\n    hp: number,\r\n    ap: number,\r\n    x: number,\r\n    y: number,\r\n    itemsMax: number\r\n  ) {\r\n    this.id = id;\r\n    this.hp = hp;\r\n    this.ap = ap;\r\n    this.coords = {\r\n      x: x,\r\n      y: y,\r\n    };\r\n    this.itemsMax = itemsMax;\r\n    this.items = [] as Item[];\r\n  }\r\n}\r\n","import { ALERT_TEXTS } from \"../constants/ALERT_TEXTS\";\r\nimport { AlertText } from \"./AlertText\";\r\n\r\nexport class UserPromt {\r\n  alertActive: AlertText;\r\n  untilAlertDismissed: number;\r\n\r\n  constructor() {\r\n    this.alertActive = ALERT_TEXTS.START;\r\n    this.untilAlertDismissed = 600;\r\n  }\r\n}\r\n","import { Blueprint } from \"./Blueprint\";\r\nimport { Item } from \"./Item\";\r\n\r\nexport class Construction {\r\n  id: number;\r\n  blueprint: Blueprint;\r\n  amount: number;\r\n  items: Item[];\r\n\r\n  constructor(id: number, blueprint: Blueprint, amount: number) {\r\n    this.id = id;\r\n    this.blueprint = blueprint;\r\n    this.amount = amount;\r\n    this.items = [];\r\n  }\r\n}\r\n","import { ItemRarity } from \"../types/ItemRarity\";\r\nimport { ITEMS } from \"../constants/ITEMS\";\r\nimport { Item } from \"../models/Item\";\r\n\r\nexport const generateItem = (): Item => {\r\n  const randomRarityGroupItems = getRarityGroupItems(randomizeRarityGroup());\r\n  const randomIndex = Math.floor(Math.random() * randomRarityGroupItems.length);\r\n  return randomRarityGroupItems[randomIndex];\r\n};\r\n\r\nconst getRarityGroupItems = (rarity: ItemRarity): Item[] => {\r\n  let itemSubset = [];\r\n\r\n  for (let i = 0; i < ITEMS.length; i++) {\r\n    if (ITEMS[i].rarity === rarity) {\r\n      itemSubset.push(ITEMS[i]);\r\n    }\r\n  }\r\n  return itemSubset;\r\n};\r\n\r\nconst randomizeRarityGroup = (): ItemRarity => {\r\n  const randomNumber = Math.random() * 100;\r\n  let itemRarity: ItemRarity;\r\n  if (randomNumber <= 35) {\r\n    itemRarity = ItemRarity.UBIQUITOUS;\r\n  } else if (randomNumber > 35 && randomNumber <= 65) {\r\n    itemRarity = ItemRarity.COMMON;\r\n  } else if (randomNumber > 65 && randomNumber <= 85) {\r\n    itemRarity = ItemRarity.UNCOMMON;\r\n  } else if (randomNumber > 85 && randomNumber <= 95) {\r\n    itemRarity = ItemRarity.RARE;\r\n  } else {\r\n    itemRarity = ItemRarity.SCARCE;\r\n  }\r\n  return itemRarity;\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { ItemRarity } from \"../types/ItemRarity\";\r\n\r\ninterface ItemCardProps {\r\n  type: string;\r\n  value: string;\r\n  rarity: ItemRarity;\r\n  onClick: (index: number) => void;\r\n}\r\n\r\nexport const ItemCard = styled.input<ItemCardProps>`\r\n  width: 80%;\r\n  height: 40px;\r\n  margin: 3px 3px 3px 3px;\r\n  background-color: ${(p) =>\r\n      p.rarity === ItemRarity.UBIQUITOUS && Colors.ITEM_UBIQUITOUS}\r\n    ${(p) => p.rarity === ItemRarity.COMMON && Colors.ITEM_COMMON}\r\n    ${(p) => p.rarity === ItemRarity.UNCOMMON && Colors.ITEM_UNCOMMON}\r\n    ${(p) => p.rarity === ItemRarity.RARE && Colors.ITEM_RARE}\r\n    ${(p) => p.rarity === ItemRarity.SCARCE && Colors.ITEM_SCARCE}\r\n    ${(p) => p.rarity === ItemRarity.UNIQUE && Colors.ITEM_UNIQUE};\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: white;\r\n  text-align: center;\r\n  font-size: 14px;\r\n`;\r\n","import React from \"react\";\r\nimport { Player } from \"../models/Player\";\r\nimport { ItemCard } from \"./ItemCard\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\ninterface InventoryBarListProps {\r\n  characters: Player[];\r\n  onClick: (slot: number) => void;\r\n  onDragEnd: (result: any) => void;\r\n}\r\n\r\nexport const InventoryBarList: React.FC<InventoryBarListProps> = ({\r\n  characters,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <Droppable\r\n      droppableId=\"items-inventory\"\r\n      isDropDisabled={characters[0].items.length >= characters[0].itemsMax}\r\n    >\r\n      {(provided) => (\r\n        <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n          {characters[0].items.map((item, index) => {\r\n            return (\r\n              <Draggable\r\n                key={index}\r\n                draggableId={\"item-inventory-\" + index}\r\n                index={index}\r\n              >\r\n                {(provided) => (\r\n                  <li\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    <ItemCard\r\n                      type=\"submit\"\r\n                      value={item.name}\r\n                      rarity={item.rarity}\r\n                      onClick={() => onClick(index)}\r\n                    />\r\n                  </li>\r\n                )}\r\n              </Draggable>\r\n            );\r\n          })}\r\n          {provided.placeholder}\r\n        </ul>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Player } from \"../models/Player\";\r\nimport { InventoryBarList } from \"./InventoryBarList\";\r\n\r\ninterface InventoryBarWrapperProps {\r\n  characters: Player[];\r\n  onClick: (slot: number) => void;\r\n  onDragEnd: (result: any) => void;\r\n}\r\n\r\nexport const InventoryBarWrapper: React.FC<InventoryBarWrapperProps> = ({\r\n  characters,\r\n  onClick,\r\n  onDragEnd,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <b>\r\n        Inventory ({characters[0].items.length}/{characters[0].itemsMax})\r\n      </b>\r\n      <br />\r\n\r\n      <InventoryBarList\r\n        characters={characters}\r\n        onClick={onClick}\r\n        onDragEnd={onDragEnd}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Tile } from \"../models/Tile\";\r\nimport { Player } from \"../models/Player\";\r\nimport { ItemCard } from \"./ItemCard\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\ninterface TileBarListProps {\r\n  characters: Player[];\r\n  tiles: Tile[][];\r\n  onClick: (slot: number) => void;\r\n  onDragEnd: (result: any) => void;\r\n}\r\n\r\nexport const TileBarList: React.FC<TileBarListProps> = ({\r\n  characters,\r\n  tiles,\r\n  onClick,\r\n}) => {\r\n  const x = characters[0].coords.x;\r\n  const y = characters[0].coords.y;\r\n\r\n  return (\r\n    <Droppable droppableId=\"items-tile\">\r\n      {(provided) => (\r\n        <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n          {tiles[x][y].items.map((item, index) => {\r\n            return (\r\n              <Draggable\r\n                key={index}\r\n                draggableId={\"item-tile-\" + index}\r\n                index={index}\r\n              >\r\n                {(provided) => (\r\n                  <li\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    <ItemCard\r\n                      type=\"submit\"\r\n                      value={tiles[x][y].items[index].name}\r\n                      rarity={tiles[x][y].items[index].rarity}\r\n                      onClick={() => onClick(index)}\r\n                    />\r\n                  </li>\r\n                )}\r\n              </Draggable>\r\n            );\r\n          })}\r\n          {provided.placeholder}\r\n        </ul>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Tile } from \"../models/Tile\";\r\nimport { Player } from \"../models/Player\";\r\nimport { TileBarList } from \"./TileBarList\";\r\n\r\ninterface TileBarWrapperProps {\r\n  characters: Player[];\r\n  tiles: Tile[][];\r\n  onClick: (slot: number) => void;\r\n  onDragEnd: (result: any) => void;\r\n}\r\n\r\nexport const TileBarWrapper: React.FC<TileBarWrapperProps> = ({\r\n  characters,\r\n  tiles,\r\n  onClick,\r\n  onDragEnd,\r\n}) => {\r\n  const x = characters[0].coords.x;\r\n  const y = characters[0].coords.y;\r\n\r\n  return (\r\n    <div>\r\n      <b>\r\n        {tiles[x][y].type.name} ({x}, {y})\r\n      </b>\r\n      <br />\r\n\r\n      <TileBarList\r\n        characters={characters}\r\n        tiles={tiles}\r\n        onClick={onClick}\r\n        onDragEnd={onDragEnd}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ItemCard } from \"./ItemCard\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { Construction } from \"../models/Construction\";\r\n\r\ninterface CraftBarListProps {\r\n  construction: Construction;\r\n  onClick: (slot: number) => void;\r\n  onDragEnd: (result: any) => void;\r\n}\r\n\r\nexport const CraftBarList: React.FC<CraftBarListProps> = ({\r\n  construction,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <Droppable droppableId=\"items-craft\">\r\n      {(provided) => (\r\n        <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n          {construction.items.map((item, index) => {\r\n            return (\r\n              <Draggable\r\n                key={index}\r\n                draggableId={\"item-craft-\" + index}\r\n                index={index}\r\n              >\r\n                {(provided) => (\r\n                  <li\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    <ItemCard\r\n                      type=\"submit\"\r\n                      value={item.name}\r\n                      rarity={item.rarity}\r\n                      onClick={() => onClick(index)}\r\n                    />\r\n                  </li>\r\n                )}\r\n              </Draggable>\r\n            );\r\n          })}\r\n          {provided.placeholder}\r\n        </ul>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Construction } from \"../models/Construction\";\r\nimport { CraftBarList } from \"./CraftBarList\";\r\n\r\ninterface CraftBarWrapperProps {\r\n  construction: Construction;\r\n  onClick: (slot: number) => void;\r\n  onDragEnd: (result: any) => void;\r\n}\r\n\r\nexport const CraftBarWrapper: React.FC<CraftBarWrapperProps> = ({\r\n  construction,\r\n  onClick,\r\n  onDragEnd,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <b>Engineering Bay</b>\r\n      <br />\r\n\r\n      <CraftBarList\r\n        construction={construction}\r\n        onClick={onClick}\r\n        onDragEnd={onDragEnd}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Tile } from \"../models/Tile\";\r\nimport { Player } from \"../models/Player\";\r\nimport { InventoryBarWrapper } from \"./InventoryBarWrapper\";\r\nimport { TileBarWrapper } from \"./TileBarWrapper\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport { CraftBarWrapper } from \"./CraftBarWrapper\";\r\nimport { Construction } from \"../models/Construction\";\r\n\r\ninterface ItemBarProps {\r\n  characters: Player[];\r\n  tiles: Tile[][];\r\n  construction: Construction;\r\n  onClickInventory: (slot: number) => void;\r\n  onClickCell: (slot: number) => void;\r\n  onDragEnd: (result: any) => void;\r\n  isInside: boolean;\r\n}\r\n\r\nexport const ItemBar: React.FC<ItemBarProps> = ({\r\n  characters,\r\n  tiles,\r\n  construction,\r\n  onClickInventory,\r\n  onClickCell,\r\n  onDragEnd,\r\n  isInside,\r\n}) => {\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <table className=\"itembar\">\r\n        <tbody>\r\n          <tr className=\"itemlists\">\r\n            <td className=\"itemlist\">\r\n              <InventoryBarWrapper\r\n                characters={characters}\r\n                onClick={onClickInventory}\r\n                onDragEnd={onDragEnd}\r\n              />\r\n            </td>\r\n\r\n            <td className=\"itemlist\">\r\n              <TileBarWrapper\r\n                characters={characters}\r\n                tiles={tiles}\r\n                onClick={onClickCell}\r\n                onDragEnd={onDragEnd}\r\n              />\r\n            </td>\r\n            {isInside && (\r\n              <td className=\"itemlist\">\r\n                <CraftBarWrapper\r\n                  construction={construction}\r\n                  onClick={onClickCell}\r\n                  onDragEnd={onDragEnd}\r\n                />\r\n              </td>\r\n            )}\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </DragDropContext>\r\n  );\r\n};\r\n","import { Item } from \"./Item\";\r\n\r\nexport class CraftCombination {\r\n  itemCombination: Item[] = [];\r\n  itemResult: Item;\r\n\r\n  constructor(itemCombination: Item[], itemResult: Item) {\r\n    this.itemCombination = itemCombination;\r\n    this.itemResult = itemResult;\r\n  }\r\n}\r\n","import { CraftCombination } from \"../models/CraftCombination\";\r\nimport { ITEMS } from \"./ITEMS\";\r\n\r\nexport const CRAFT_COMBINATIONS = [\r\n  new CraftCombination([ITEMS[0], ITEMS[0]], ITEMS[1]), // Log -> Plank\r\n  new CraftCombination([ITEMS[1], ITEMS[1]], ITEMS[2]), // Plank -> Wooden Beam\r\n  new CraftCombination([ITEMS[3], ITEMS[3]], ITEMS[4]), // Iron Ore -> Iron Bar\r\n  new CraftCombination([ITEMS[4], ITEMS[4]], ITEMS[5]), // Iron Bar -> Iron Sheet\r\n  new CraftCombination([ITEMS[6], ITEMS[6]], ITEMS[7]), // Broken Circuit -> Electronic Plate\r\n  new CraftCombination([ITEMS[7], ITEMS[7]], ITEMS[8]), // Electronic Plate -> Transistor Radio\r\n  new CraftCombination([ITEMS[9], ITEMS[9]], ITEMS[10]), // Copper Ore -> Copper Wire\r\n  new CraftCombination([ITEMS[10], ITEMS[10]], ITEMS[11]), // Copper Wire -> Antenna\r\n];\r\n","import styled from \"styled-components\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { ItemRarity } from \"../types/ItemRarity\";\r\n\r\ninterface BlueprintItemProps {\r\n  rarity: ItemRarity;\r\n}\r\n\r\nexport const BlueprintItem = styled.div<BlueprintItemProps>`\r\n  color: ${(p) => p.rarity === ItemRarity.UNIQUE && Colors.ITEM_UNIQUE}\r\n    ${(p) => p.rarity === ItemRarity.SCARCE && Colors.ITEM_SCARCE}\r\n    ${(p) => p.rarity === ItemRarity.UNCOMMON && Colors.ITEM_UNCOMMON}\r\n    ${(p) => p.rarity === ItemRarity.COMMON && Colors.ITEM_COMMON}\r\n    ${(p) => p.rarity === ItemRarity.UBIQUITOUS && Colors.ITEM_UBIQUITOUS};\r\n  font-weight: bold;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Colors } from \"../styles/Colors\";\r\n\r\ninterface ConstructionCardProps {\r\n  amount: number;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const ConstructionCard = styled.div<ConstructionCardProps>`\r\n  width: 100%;\r\n  margin: 3px 3px 3px 3px;\r\n  margin-right: 0px;\r\n  background-color: ${(p) =>\r\n    p.amount > 0 ? Colors.CONSTRUCTIONS_BUILT : Colors.CONSTRUCTIONS_NOT_BUILT};\r\n  border: 2px solid\r\n    ${(p) =>\r\n      p.amount > 0\r\n        ? Colors.CONSTRUCTIONS_BUILT_BORDER\r\n        : Colors.CONSTRUCTIONS_NOT_BUILT_BORDER};\r\n  border-radius: 5px;\r\n  color: ${(p) => (p.amount > 0 ? \"white\" : \"black\")};\r\n  text-align: center;\r\n  font-size: 14px;\r\n`;\r\n","import React from \"react\";\r\nimport { Item } from \"../models/Item\";\r\nimport { BlueprintItem } from \"./BlueprintItem\";\r\nimport { ConstructionCard } from \"./ConstructionCard\";\r\n\r\ninterface ConstructionCardWrapperProps {\r\n  name: string;\r\n  amount: number;\r\n  defenseTotal: number;\r\n  itemsToConstruct: Item[] | undefined;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const ConstructionCardWrapper: React.FC<ConstructionCardWrapperProps> =\r\n  ({ name, amount, defenseTotal, itemsToConstruct, onClick }) => {\r\n    return (\r\n      <ConstructionCard amount={amount} onClick={onClick}>\r\n        <table className=\"constructioncard-table\">\r\n          <tbody>\r\n            <tr className=\"constructioncard-row\">\r\n              <td className=\"constructioncard-cell\" colSpan={2}>\r\n                <b>{name}</b>\r\n              </td>\r\n            </tr>\r\n            <tr className=\"constructioncard-row\">\r\n              <td className=\"constructioncard-cell\">\r\n                <i>{defenseTotal} DEF</i>\r\n              </td>\r\n              <td className=\"constructioncard-cell\">\r\n                <i>x{amount}</i>\r\n              </td>\r\n            </tr>\r\n            {itemsToConstruct &&\r\n              itemsToConstruct.map((item) => {\r\n                return (\r\n                  <tr>\r\n                    <td colSpan={2}>\r\n                      <BlueprintItem rarity={item.rarity}>\r\n                        {item.name}\r\n                      </BlueprintItem>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </ConstructionCard>\r\n    );\r\n  };\r\n","import React from \"react\";\r\nimport { Blueprint } from \"../models/Blueprint\";\r\nimport { Construction } from \"../models/Construction\";\r\nimport { ConstructionCardWrapper } from \"./ConstructionCardWrapper\";\r\n\r\ninterface ConstructionBarProps {\r\n  constructions: Construction[];\r\n  onClick: (blueprint: Blueprint) => void;\r\n}\r\n\r\nexport const ConstructionBar: React.FC<ConstructionBarProps> = ({\r\n  constructions,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <span className=\"constructionbar\">\r\n      <b>Constructions</b>\r\n      <br />\r\n\r\n      {constructions.map((construction, index) => {\r\n        return (\r\n          <ConstructionCardWrapper\r\n            name={construction.blueprint.name}\r\n            defenseTotal={construction.blueprint.defenseBase}\r\n            itemsToConstruct={construction.blueprint.itemsToConstruct}\r\n            amount={construction.amount}\r\n            onClick={() => {\r\n              onClick(construction.blueprint);\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </span>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"../styles/App.css\";\r\nimport { Map } from \"./Map\";\r\nimport { StatusBar } from \"./StatusBar\";\r\nimport { ActionBar } from \"./ActionBar\";\r\nimport { SETTINGS } from \"../constants/SETTINGS\";\r\nimport { AlertBar } from \"./AlertBar\";\r\nimport { ALERT_TEXTS } from \"../constants/ALERT_TEXTS\";\r\nimport { AlertText } from \"../models/AlertText\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { generateInitialState } from \"../utils/GameUtils\";\r\nimport { generateItem } from \"../utils/ItemUtils\";\r\nimport { ItemBar } from \"./ItemBar\";\r\nimport { CRAFT_COMBINATIONS } from \"../constants/CRAFT_COMBINATIONS\";\r\nimport { ConstructionBar } from \"./ConstructionBar\";\r\nimport { Blueprint } from \"../models/Blueprint\";\r\n\r\nexport const Game: React.FC = () => {\r\n  const initialState = generateInitialState();\r\n\r\n  const [characters, setCharacters] = useState(initialState.characters);\r\n  const [phase, setPhase] = useState(initialState.phase);\r\n  const [tiles, setTiles] = useState(initialState.tiles);\r\n  const [constructions, setConstructions] = useState(\r\n    initialState.constructions\r\n  );\r\n  const [userPrompt, setUserPrompt] = useState(initialState.userPrompt);\r\n  const [isInside, setIsInside] = useState(false);\r\n\r\n  const gameLoop = () => {\r\n    const updatedCharacters = [...characters];\r\n    const updatedPhase = phase;\r\n    const updatedUserPrompt = userPrompt;\r\n\r\n    if (updatedPhase.untilNextTurn > 0) {\r\n      updatedPhase.untilNextTurn -= 1;\r\n    } else {\r\n      updatedPhase.turn += 1;\r\n      updatedPhase.untilNextTurn = SETTINGS.DURATION_TURN - 1;\r\n      updatedCharacters[0].ap < SETTINGS.PLAYER_AP_MAX &&\r\n        (updatedCharacters[0].ap += 1);\r\n    }\r\n\r\n    if (updatedUserPrompt.untilAlertDismissed > 0) {\r\n      updatedUserPrompt.untilAlertDismissed -= 1;\r\n    }\r\n\r\n    setCharacters([...updatedCharacters]);\r\n    setUserPrompt(updatedUserPrompt);\r\n    setPhase(updatedPhase);\r\n  };\r\n\r\n  const handleClickTile = (col: number, row: number) => {\r\n    if (characters[0].ap > 0) {\r\n      if (distCellToCharacter(col, row) === 1) {\r\n        const updatedCharacters = [...characters];\r\n        const updatedTiles = [...tiles];\r\n\r\n        const oldX = characters[0].coords.x;\r\n        const oldY = characters[0].coords.y;\r\n\r\n        updatedCharacters[0].ap -= 1;\r\n\r\n        updatedCharacters[0].coords = {\r\n          x: col,\r\n          y: row,\r\n        };\r\n\r\n        updatedTiles[oldX][oldY].characters = [];\r\n        updatedTiles[col][row].characters.push(updatedCharacters[0]);\r\n\r\n        setCharacters(updatedCharacters);\r\n        setTiles(updatedTiles);\r\n      }\r\n    } else {\r\n      handleDisplayAlert(ALERT_TEXTS.OUT_OF_AP);\r\n    }\r\n  };\r\n\r\n  const handleClickSearch = () => {\r\n    const x = characters[0].coords.x;\r\n    const y = characters[0].coords.y;\r\n\r\n    if (x === 5 && y === 5) {\r\n      handleDisplayAlert(ALERT_TEXTS.NO_SEARCH_ZONE);\r\n      return;\r\n    }\r\n\r\n    if (characters[0].ap <= 0) {\r\n      handleDisplayAlert(ALERT_TEXTS.OUT_OF_AP);\r\n      return;\r\n    }\r\n\r\n    const updatedCharacters = [...characters];\r\n    const updatedTiles = [...tiles];\r\n\r\n    updatedCharacters[0].ap -= 1;\r\n\r\n    if (characters[0].items.length <= characters[0].itemsMax - 1) {\r\n      updatedCharacters[0].items.push(generateItem());\r\n      setCharacters(updatedCharacters);\r\n    } else {\r\n      updatedTiles[x][y].items.push(generateItem());\r\n\r\n      setCharacters(updatedCharacters);\r\n      setTiles(updatedTiles);\r\n    }\r\n  };\r\n\r\n  const handleClickCraft = () => {\r\n    if (constructions[0].items.length < 2) {\r\n      handleDisplayAlert(ALERT_TEXTS.CRAFT_NO_ITEMS);\r\n      return;\r\n    }\r\n\r\n    if (characters[0].ap <= 0) {\r\n      handleDisplayAlert(ALERT_TEXTS.OUT_OF_AP);\r\n      return;\r\n    }\r\n\r\n    const updatedCharacters = [...characters];\r\n    const updatedConstructions = [...constructions];\r\n\r\n    updatedCharacters[0].ap -= 1;\r\n    setCharacters(updatedCharacters);\r\n\r\n    let isCraftSuccessful = false;\r\n\r\n    CRAFT_COMBINATIONS.forEach((craftCombination) => {\r\n      if (\r\n        craftCombination.itemCombination.length ===\r\n        constructions[0].items.length\r\n      ) {\r\n        let itemCheckSuccessful = true;\r\n        const itemCheckTemporaryPool = [...updatedConstructions[0].items];\r\n        craftCombination.itemCombination.forEach((item) => {\r\n          if (itemCheckTemporaryPool.includes(item)) {\r\n            itemCheckTemporaryPool.splice(\r\n              itemCheckTemporaryPool.indexOf(item),\r\n              1\r\n            );\r\n          } else {\r\n            itemCheckSuccessful = false;\r\n          }\r\n        });\r\n\r\n        if (itemCheckSuccessful) {\r\n          updatedConstructions[0].items = [craftCombination.itemResult];\r\n          setConstructions(updatedConstructions);\r\n          isCraftSuccessful = true;\r\n          handleDisplayAlert(ALERT_TEXTS.CRAFT_SUCCESS);\r\n          return;\r\n        }\r\n      }\r\n    });\r\n    if (!isCraftSuccessful) {\r\n      handleDisplayAlert(ALERT_TEXTS.CRAFT_NO_COMBINATION);\r\n    }\r\n  };\r\n\r\n  const handleClickConstruct = (blueprint: Blueprint) => {\r\n    if (characters[0].ap <= 0) {\r\n      handleDisplayAlert(ALERT_TEXTS.OUT_OF_AP);\r\n      return;\r\n    }\r\n\r\n    const updatedCharacters = [...characters];\r\n    updatedCharacters[0].ap -= 1;\r\n\r\n    let areAllItemsPresent = true;\r\n    const itemCheckTemporaryPool = [...tiles[5][5].items];\r\n\r\n    blueprint.itemsToConstruct?.map((itemToConstruct) => {\r\n      if (itemCheckTemporaryPool.includes(itemToConstruct)) {\r\n        itemCheckTemporaryPool.splice(\r\n          itemCheckTemporaryPool.indexOf(itemToConstruct),\r\n          1\r\n        );\r\n      } else {\r\n        areAllItemsPresent = false;\r\n        handleDisplayAlert(ALERT_TEXTS.CONSTRUCTION_NO_ITEMS);\r\n      }\r\n    });\r\n\r\n    if (areAllItemsPresent) {\r\n      const updatedConstructions = [...constructions];\r\n      const updatedTiles = [...tiles];\r\n\r\n      blueprint.itemsToConstruct?.map((itemToConstruct) => {\r\n        if (updatedTiles[5][5].items.includes(itemToConstruct)) {\r\n          updatedTiles[5][5].items.splice(\r\n            updatedTiles[5][5].items.indexOf(itemToConstruct),\r\n            1\r\n          );\r\n        }\r\n      });\r\n\r\n      updatedConstructions[blueprint.id].amount += 1;\r\n\r\n      setConstructions(updatedConstructions);\r\n      setTiles(updatedTiles);\r\n      handleDisplayAlert(ALERT_TEXTS.CONSTRUCTION_SUCCESS);\r\n    }\r\n    setCharacters(characters);\r\n  };\r\n\r\n  const handleClickItemInventory = (slot: number) => {\r\n    const x = characters[0].coords.x;\r\n    const y = characters[0].coords.y;\r\n\r\n    const updatedCharacters = [...characters];\r\n    const updatedTiles = [...tiles];\r\n\r\n    updatedTiles[x][y].items.push(characters[0].items[slot]);\r\n    updatedCharacters[0].items.splice(slot, 1);\r\n\r\n    setCharacters(updatedCharacters);\r\n    setTiles(updatedTiles);\r\n  };\r\n\r\n  const handleClickItemTile = (slot: number) => {\r\n    if (characters[0].items.length <= characters[0].itemsMax - 1) {\r\n      const updatedCharacters = [...characters];\r\n      const updatedTiles = [...tiles];\r\n\r\n      const x = characters[0].coords.x;\r\n      const y = characters[0].coords.y;\r\n\r\n      updatedCharacters[0].items.push(tiles[x][y].items[slot]);\r\n      updatedTiles[x][y].items.splice(slot, 1);\r\n\r\n      setCharacters(updatedCharacters);\r\n      setTiles(updatedTiles);\r\n    }\r\n  };\r\n\r\n  const handleDisplayAlert = (alert: AlertText) => {\r\n    const updatedUserPrompt = userPrompt;\r\n\r\n    updatedUserPrompt.alertActive = alert;\r\n    updatedUserPrompt.untilAlertDismissed = SETTINGS.DURATION_ALERT;\r\n\r\n    setUserPrompt(updatedUserPrompt);\r\n  };\r\n\r\n  const handleDragEnd = (result: any) => {\r\n    if (!result.destination) return;\r\n\r\n    const updatedCharacters = [...characters];\r\n    const updatedTiles = [...tiles];\r\n    const updatedConstruction = constructions;\r\n\r\n    const x = characters[0].coords.x;\r\n    const y = characters[0].coords.y;\r\n\r\n    if (result.source.droppableId === result.destination.droppableId) {\r\n      if (result.source.droppableId === \"items-inventory\") {\r\n        const items = Array.from(characters[0].items);\r\n\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        updatedCharacters[0].items = items;\r\n      }\r\n\r\n      if (result.source.droppableId === \"items-tile\") {\r\n        const items = Array.from(tiles[x][y].items);\r\n\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        updatedTiles[x][y].items = items;\r\n      }\r\n\r\n      if (result.source.droppableId === \"items-craft\") {\r\n        const items = Array.from(constructions[0].items);\r\n\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        updatedConstruction[0].items = items;\r\n      }\r\n    }\r\n\r\n    if (result.source.droppableId !== result.destination.droppableId) {\r\n      let itemsSource = Array(0);\r\n      let itemsDestination = Array(0);\r\n\r\n      if (\r\n        result.source.droppableId === \"items-inventory\" &&\r\n        result.destination.droppableId === \"items-tile\"\r\n      ) {\r\n        itemsSource = Array.from(characters[0].items);\r\n        itemsDestination = Array.from(tiles[x][y].items);\r\n\r\n        const [reorderedItem] = itemsSource.splice(result.source.index, 1);\r\n        itemsDestination.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        updatedCharacters[0].items = itemsSource;\r\n        updatedTiles[x][y].items = itemsDestination;\r\n      } else if (\r\n        result.source.droppableId === \"items-tile\" &&\r\n        result.destination.droppableId === \"items-inventory\"\r\n      ) {\r\n        if (characters[0].items.length <= characters[0].itemsMax - 1) {\r\n          itemsSource = Array.from(tiles[x][y].items);\r\n          itemsDestination = Array.from(characters[0].items);\r\n\r\n          const [reorderedItem] = itemsSource.splice(result.source.index, 1);\r\n          itemsDestination.splice(result.destination.index, 0, reorderedItem);\r\n\r\n          updatedTiles[x][y].items = itemsSource;\r\n          updatedCharacters[0].items = itemsDestination;\r\n        }\r\n      }\r\n\r\n      if (\r\n        result.source.droppableId === \"items-inventory\" &&\r\n        result.destination.droppableId === \"items-craft\"\r\n      ) {\r\n        itemsSource = Array.from(characters[0].items);\r\n        itemsDestination = Array.from(constructions[0].items);\r\n\r\n        const [reorderedItem] = itemsSource.splice(result.source.index, 1);\r\n        itemsDestination.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        updatedCharacters[0].items = itemsSource;\r\n        updatedConstruction[0].items = itemsDestination;\r\n      } else if (\r\n        result.source.droppableId === \"items-craft\" &&\r\n        result.destination.droppableId === \"items-inventory\"\r\n      ) {\r\n        if (characters[0].items.length <= characters[0].itemsMax - 1) {\r\n          itemsSource = Array.from(constructions[0].items);\r\n          itemsDestination = Array.from(characters[0].items);\r\n\r\n          const [reorderedItem] = itemsSource.splice(result.source.index, 1);\r\n          itemsDestination.splice(result.destination.index, 0, reorderedItem);\r\n\r\n          updatedConstruction[0].items = itemsSource;\r\n          updatedCharacters[0].items = itemsDestination;\r\n        }\r\n      }\r\n\r\n      if (\r\n        result.source.droppableId === \"items-tile\" &&\r\n        result.destination.droppableId === \"items-craft\"\r\n      ) {\r\n        itemsSource = Array.from(tiles[x][y].items);\r\n        itemsDestination = Array.from(constructions[0].items);\r\n\r\n        const [reorderedItem] = itemsSource.splice(result.source.index, 1);\r\n        itemsDestination.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        updatedTiles[x][y].items = itemsSource;\r\n        updatedConstruction[0].items = itemsDestination;\r\n      } else if (\r\n        result.source.droppableId === \"items-craft\" &&\r\n        result.destination.droppableId === \"items-tile\"\r\n      ) {\r\n        itemsSource = Array.from(constructions[0].items);\r\n        itemsDestination = Array.from(tiles[x][y].items);\r\n\r\n        const [reorderedItem] = itemsSource.splice(result.source.index, 1);\r\n        itemsDestination.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        updatedConstruction[0].items = itemsSource;\r\n        updatedTiles[x][y].items = itemsDestination;\r\n      }\r\n    }\r\n\r\n    setCharacters(updatedCharacters);\r\n    setTiles(updatedTiles);\r\n    setConstructions(updatedConstruction);\r\n  };\r\n\r\n  const distCellToCharacter = (col: number, row: number) => {\r\n    return Math.max(\r\n      Math.abs(tiles[col][row].coords.x - characters[0].coords.x),\r\n      Math.abs(tiles[col][row].coords.y - characters[0].coords.y)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(gameLoop, 1000);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let x = characters[0].coords.x;\r\n    let y = characters[0].coords.y;\r\n    setIsInside(x === 5 && y === 5);\r\n  }, [characters[0].coords.x, characters[0].coords.y]);\r\n\r\n  useEffect(() => {\r\n    if (constructions[2].amount > 0) {\r\n      handleDisplayAlert(ALERT_TEXTS.VICTORY);\r\n      const updatedUserPrompt = userPrompt;\r\n      updatedUserPrompt.untilAlertDismissed = 1200;\r\n      setUserPrompt(updatedUserPrompt);\r\n    }\r\n  }, [constructions]);\r\n\r\n  return (\r\n    <div className=\"ui\">\r\n      <div className=\"ui-row1\">\r\n        <Map tiles={tiles} onClick={handleClickTile} />\r\n        <ItemBar\r\n          characters={characters}\r\n          tiles={tiles}\r\n          construction={constructions[0]}\r\n          onClickInventory={handleClickItemInventory}\r\n          onClickCell={handleClickItemTile}\r\n          onDragEnd={handleDragEnd}\r\n          isInside={isInside}\r\n        />\r\n        {isInside && (\r\n          <ConstructionBar\r\n            constructions={constructions}\r\n            onClick={handleClickConstruct}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"ui-row2\">\r\n        <StatusBar phase={phase} characters={characters} />\r\n        <ActionBar\r\n          isInside={isInside}\r\n          onClickSearch={handleClickSearch}\r\n          onClickCraft={handleClickCraft}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"ui-row3\">\r\n        <AlertBar\r\n          alertText={userPrompt.alertActive}\r\n          isVisible={userPrompt.untilAlertDismissed > 0}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import { BLUEPRINTS } from \"../constants/BLUEPRINTS\";\r\nimport { SETTINGS } from \"../constants/SETTINGS\";\r\nimport { TILETYPES } from \"../constants/TILETYPES\";\r\nimport { Tile } from \"../models/Tile\";\r\nimport { Phase } from \"../models/Phase\";\r\nimport { Player } from \"../models/Player\";\r\nimport { UserPromt } from \"../models/UserPrompt\";\r\nimport { Construction } from \"../models/Construction\";\r\n\r\ninterface GameState {\r\n  characters: Player[];\r\n  phase: Phase;\r\n  tiles: Tile[][];\r\n  constructions: Construction[];\r\n  userPrompt: UserPromt;\r\n}\r\n\r\nexport const generateInitialState = (): GameState => {\r\n  let initialTiles = new Array(11);\r\n  for (let col = 0; col < initialTiles.length; col++) {\r\n    initialTiles[col] = new Array(11);\r\n    for (let row = 0; row < initialTiles[col].length; row++) {\r\n      initialTiles[col][row] = new Tile(TILETYPES[0], col, row);\r\n    }\r\n  }\r\n\r\n  initialTiles[5][5].type = TILETYPES[1];\r\n  initialTiles[4][4].type = TILETYPES[2];\r\n  initialTiles[5][4].type = TILETYPES[2];\r\n  initialTiles[6][4].type = TILETYPES[2];\r\n  initialTiles[4][5].type = TILETYPES[2];\r\n  initialTiles[6][5].type = TILETYPES[2];\r\n  initialTiles[4][6].type = TILETYPES[2];\r\n  initialTiles[5][6].type = TILETYPES[2];\r\n  initialTiles[6][6].type = TILETYPES[2];\r\n\r\n  initialTiles[5][5].characters.push(\r\n    new Player(\r\n      1,\r\n      SETTINGS.PLAYER_HP_MAX,\r\n      SETTINGS.PLAYER_AP_MAX,\r\n      SETTINGS.POSITION_START.x,\r\n      SETTINGS.POSITION_START.y,\r\n      6\r\n    )\r\n  );\r\n\r\n  // Initial characters\r\n\r\n  const initialCharacters = [];\r\n  initialCharacters.push(\r\n    new Player(\r\n      1,\r\n      SETTINGS.PLAYER_HP_MAX,\r\n      SETTINGS.PLAYER_AP_MAX,\r\n      SETTINGS.POSITION_START.x,\r\n      SETTINGS.POSITION_START.y,\r\n      6\r\n    )\r\n  );\r\n\r\n  // Initial phase\r\n\r\n  const initialPhase = new Phase();\r\n\r\n  // Initial constructions\r\n\r\n  const initialConstructions = [];\r\n  const engineeringBay = new Construction(0, BLUEPRINTS[0], 1);\r\n  const starship = new Construction(1, BLUEPRINTS[1], 1);\r\n  const emergencyBeaconUnfinished = new Construction(2, BLUEPRINTS[2], 0);\r\n\r\n  initialConstructions.push(engineeringBay);\r\n  initialConstructions.push(starship);\r\n  initialConstructions.push(emergencyBeaconUnfinished);\r\n\r\n  // Initial user prompt\r\n\r\n  const initialUserPrompt = new UserPromt();\r\n\r\n  return {\r\n    characters: initialCharacters,\r\n    phase: initialPhase,\r\n    tiles: initialTiles,\r\n    constructions: initialConstructions,\r\n    userPrompt: initialUserPrompt,\r\n  };\r\n};\r\n","import \"../styles/App.css\";\nimport Game from \"./Game\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst App = () => {\n  return <Game />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App.tsx\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}