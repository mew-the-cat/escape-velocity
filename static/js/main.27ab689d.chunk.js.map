{"version":3,"sources":["components/Game.js","components/App.js","reportWebVitals.js","index.js"],"names":["Game","props","initialTiles","Array","col","length","row","Tile","characters","push","Player","SETTINGS","PLAYER_HP_MAX","PLAYER_AP_MAX","POSITION_START","x","y","initialCharacters","initialPhase","Phase","state","tiles","phase","handleClickTile","bind","handleClickSearch","handleClickItemInventory","handleClickItemTile","setInterval","gameLoop","this","untilTextTurn","updatedTiles","updatedCharacters","updatedPhase","ap","turn","setState","rowSpan","onClick","colSpan","className","distCellToCharacter","oldCoords","coords","oldX","oldY","alert","fillPosition","i","inventory","size","slots","ITEM_REGISTRY","randomIndex","Math","floor","random","slot","id","items","splice","max","abs","React","Component","Map","Cells","handleClickTileBound","StatusBar","hp","ActionBar","type","value","InventoryBar","itemListComponents","handleClickItemInventoryBound","name","TileBar","handleClickItemTileBound","Cell","Inventory","DURATION_TURN","isNight","Item","inventorySize","INVENTORY_SIZE","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27ab689d.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/App.css';\r\n\r\nclass Game extends React.Component{\r\n    constructor(props){\r\n      super(props);   \r\n  \r\n      var initialTiles = new Array(11);\r\n      for (var col=0; col<initialTiles.length; col++) {     \r\n        initialTiles[col]=new Array(11);    \r\n        for (var row=0; row<initialTiles[col].length; row++){\r\n          initialTiles[col][row] = new Tile(col, row);\r\n        }\r\n      }\r\n      initialTiles[5][5].characters.push(new Player(SETTINGS.PLAYER_HP_MAX, SETTINGS.PLAYER_AP_MAX, SETTINGS.POSITION_START.x, SETTINGS.POSITION_START.y));  \r\n  \r\n      var initialCharacters = [];\r\n      initialCharacters.push(new Player(SETTINGS.PLAYER_HP_MAX, SETTINGS.PLAYER_AP_MAX, SETTINGS.POSITION_START.x, SETTINGS.POSITION_START.y));\r\n  \r\n      var initialPhase = new Phase();\r\n      \r\n      this.state = {\r\n        tiles: initialTiles,\r\n        characters: initialCharacters,\r\n        phase: initialPhase,\r\n      };      \r\n  \r\n      this.handleClickTile = this.handleClickTile.bind(this);    \r\n      this.handleClickSearch = this.handleClickSearch.bind(this);   \r\n      this.handleClickItemInventory = this.handleClickItemInventory.bind(this); \r\n      this.handleClickItemTile = this.handleClickItemTile.bind(this); \r\n  \r\n      setInterval(this.gameLoop.bind(this), 1000);\r\n    }\r\n  \r\n  \r\n    gameLoop() {   \r\n      if (this.state.phase.untilTextTurn > 1) {\r\n        var updatedTiles = this.state.tiles\r\n        var updatedCharacters = this.state.characters; \r\n        var updatedPhase = this.state.phase;\r\n  \r\n        updatedPhase.untilTextTurn -= 1;\r\n      }\r\n      else{\r\n        var updatedTiles = this.state.tiles\r\n  \r\n        var updatedCharacters = this.state.characters;    \r\n        if (updatedCharacters[0].ap < 4){\r\n          updatedCharacters[0].ap += 1;\r\n        }    \r\n  \r\n        var updatedPhase = this.state.phase;\r\n        updatedPhase.turn += 1;\r\n        updatedPhase.untilTextTurn = 5;      \r\n      }\r\n  \r\n      this.setState({\r\n        tiles: updatedTiles,\r\n        characters: updatedCharacters,\r\n        phase: updatedPhase,\r\n      });    \r\n    }\r\n  \r\n    render(){      \r\n      return (\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td rowSpan=\"3\">\r\n                <Map tiles={this.state.tiles} onClick={this.handleClickTile} />\r\n              </td>\r\n              <td colSpan=\"2\" className=\"aux-window\">\r\n                <StatusBar phase={this.state.phase} characters={this.state.characters} />\r\n              </td>\r\n            </tr>\r\n            <tr>          \r\n              <td colSpan=\"2\" className=\"aux-window\">\r\n                <ActionBar onClick={this.handleClickSearch} />\r\n              </td>\r\n            </tr>\r\n            <tr>          \r\n              <td className=\"aux-window\">\r\n                <InventoryBar characters={this.state.characters} onClick={this.handleClickItemInventory} />\r\n              </td>\r\n              <td className=\"aux-window\">\r\n                <TileBar tiles={this.state.tiles} characters={this.state.characters} onClick={this.handleClickItemTile} />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      );\r\n    }\r\n  \r\n    handleClickTile(col, row){    \r\n      if (this.state.characters[0].ap > 0){    \r\n        if (this.distCellToCharacter(col, row) === 1){ \r\n          this.state.characters[0].ap -= 1;\r\n  \r\n          var oldCoords = this.state.characters[0].coords;\r\n          var oldX = oldCoords.x;\r\n          var oldY = oldCoords.y;\r\n  \r\n          var updatedCharacters = this.state.characters;\r\n          updatedCharacters[0].coords = {\r\n            x: col, \r\n            y: row,\r\n          }\r\n  \r\n          var updatedTiles = this.state.tiles;\r\n          updatedTiles[oldX][oldY].characters = [];\r\n          updatedTiles[col][row].characters.push(updatedCharacters[0]);\r\n  \r\n          var updatedPhase = this.state.phase;    \r\n  \r\n          this.setState({\r\n            tiles: updatedTiles,\r\n            characters: updatedCharacters,\r\n            phase: updatedPhase,\r\n          });     \r\n        }\r\n      }\r\n      else{\r\n        alert(\"You are out of action points\");\r\n      }    \r\n    } \r\n    \r\n    handleClickSearch() {\r\n      if (this.state.characters[0].ap > 0){  \r\n        this.state.characters[0].ap -= 1 \r\n        var fillPosition = -1;     \r\n        for (var i=0; i<this.state.characters[0].inventory.size; i++){\r\n          if (this.state.characters[0].inventory.slots[i] === ITEM_REGISTRY[0]){\r\n            var fillPosition = i;          \r\n            break;\r\n          }\r\n        }\r\n  \r\n        if (fillPosition !== -1){\r\n          let randomIndex = Math.floor(Math.random() * ITEM_REGISTRY.length);\r\n        \r\n          var updatedCharacters = this.state.characters;\r\n          updatedCharacters[0].inventory.slots[fillPosition] = ITEM_REGISTRY[randomIndex];\r\n          \r\n          var updatedTiles = this.state.tiles;\r\n          var updatedPhase = this.state.phase;    \r\n  \r\n          this.setState({\r\n            tiles: updatedTiles,\r\n            characters: updatedCharacters,\r\n            phase: updatedPhase,\r\n          });     \r\n        }\r\n        else{\r\n          alert(\"Inventory is full\");\r\n        }    \r\n        \r\n      }\r\n      else{\r\n        alert(\"You are out of action points\");\r\n      }\r\n  }\r\n  \r\n  handleClickItemInventory(slot){  \r\n    if (this.state.characters[0].inventory.slots[slot].id != ITEM_REGISTRY[0].id){\r\n      var x = this.state.characters[0].coords.x;\r\n      var y = this.state.characters[0].coords.y;\r\n  \r\n      var updatedCharacters = this.state.characters; \r\n      var updatedTiles = this.state.tiles;\r\n      var updatedPhase = this.state.phase; \r\n  \r\n      updatedTiles[x][y].items.push(this.state.characters[0].inventory.slots[slot])\r\n      updatedCharacters[0].inventory.slots[slot] = ITEM_REGISTRY[0];\r\n  \r\n      this.setState({\r\n        tiles: updatedTiles,\r\n        characters: updatedCharacters,\r\n        phase: updatedPhase,\r\n      }); \r\n    }\r\n  }\r\n    \r\n    handleClickItemTile(slot){  \r\n        var fillPosition = -1;     \r\n        for (var i=0; i<this.state.characters[0].inventory.size; i++){\r\n          if (this.state.characters[0].inventory.slots[i] === ITEM_REGISTRY[0]){\r\n            var fillPosition = i;          \r\n            break;\r\n          }\r\n        }\r\n  \r\n        if (fillPosition !== -1){\r\n          var x = this.state.characters[0].coords.x;\r\n          var y = this.state.characters[0].coords.y;\r\n  \r\n          var updatedCharacters = this.state.characters; \r\n          var updatedTiles = this.state.tiles;\r\n          var updatedPhase = this.state.phase; \r\n  \r\n          updatedCharacters[0].inventory.slots[fillPosition] = this.state.tiles[x][y].items[slot];\r\n          updatedTiles[x][y].items.splice(slot, 1);     \r\n  \r\n          this.setState({\r\n            tiles: updatedTiles,\r\n            characters: updatedCharacters,\r\n            phase: updatedPhase,\r\n          }); \r\n      }\r\n    }\r\n  \r\n    distCellToCharacter(col, row){    \r\n      return Math.max(Math.abs(this.state.tiles[col][row].coords.x - this.state.characters[0].coords.x), Math.abs(this.state.tiles[col][row].coords.y - this.state.characters[0].coords.y));   \r\n    }\r\n  \r\n  }\r\n  \r\n  class Map extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n    }\r\n  \r\n    render() {    \r\n      var Cells = [];\r\n      for (var row=0; row<this.props.tiles.length; row++) { \r\n        for (var col=0; col<this.props.tiles[row].length; col++){ \r\n          var handleClickTileBound = this.props.onClick.bind(this, col, row);                            \r\n          Cells.push(<Cell key={\"Cell\" + col + \":\"+ row} coords={{x: col, y: row}} characters={this.props.tiles[col][row].characters} onClick={handleClickTileBound} />);         \r\n        }  \r\n        Cells.push(<br key={\"LineBreak\" + row} />);      \r\n      }\r\n      return Cells;\r\n    }\r\n  }\r\n  \r\n  class StatusBar extends React.Component{\r\n    render(){\r\n      return(\r\n      <div>\r\n        <b>Status bar</b><br />\r\n        Turn: {this.props.phase.turn} (00:00:0{this.props.phase.untilTextTurn})<br />\r\n        Action points: {this.props.characters[0].ap} / {SETTINGS.PLAYER_AP_MAX}<br /> \r\n        Health points: {this.props.characters[0].hp} / {SETTINGS.PLAYER_HP_MAX}     \r\n      </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  class ActionBar extends React.Component{\r\n    render(){\r\n      return(\r\n        <div>\r\n          <b>Actions</b><br/ >\r\n          <input className=\"action\" type=\"button\" value=\"Search\" onClick={this.props.onClick} />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  class InventoryBar extends React.Component{\r\n    render(){\r\n      var itemListComponents = new Array(this.props.characters[0].inventory.size)\r\n      for (var i=0; i<itemListComponents.length; i++){\r\n        var handleClickItemInventoryBound = this.props.onClick.bind(this, i);\r\n        itemListComponents[i] = <div key={\"ItemInventoryDiv\" + i} >\r\n                                  <input className=\"item\"\r\n                                         type=\"submit\" key={\"ItemInventoryInput\" + i}  \r\n                                         value={this.props.characters[0].inventory.slots[i].name} \r\n                                         onClick={handleClickItemInventoryBound} />\r\n                                </div>\r\n      }\r\n      return( \r\n        <div>\r\n          <b>Inventory</b><br/ >        \r\n          {itemListComponents}          \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  class TileBar extends React.Component{\r\n    render(){ \r\n      var x = this.props.characters[0].coords.x;\r\n      var y = this.props.characters[0].coords.y;\r\n      var itemListComponents = new Array(this.props.tiles[x][y].items)\r\n      for (var i=0; i<this.props.tiles[x][y].items.length; i++){\r\n        var handleClickItemTileBound = this.props.onClick.bind(this, i);\r\n        itemListComponents[i] = <div key={\"ItemTileDiv\" + i} >\r\n                                  <input className=\"item\"\r\n                                         type=\"submit\" key={\"ItemTileInput\" + i} \r\n                                         value={this.props.tiles[x][y].items[i].name} \r\n                                         onClick={handleClickItemTileBound}/>\r\n                                </div>\r\n      }      \r\n      return( \r\n        <div>\r\n          <b>Tile ({this.props.characters[0].coords.x}, {this.props.characters[0].coords.y})</b><br/>         \r\n          {itemListComponents}          \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  class Cell extends React.Component{\r\n    constructor(props) {\r\n      super(props);       \r\n    }\r\n  \r\n    render(){  \r\n      if (this.props.characters.length === 0){\r\n        return <button className=\"cell\" onClick={this.props.onClick}>{\"(\" + this.props.coords.x + \", \" + this.props.coords.y + \")\"}</button>\r\n      }\r\n      else{\r\n        return <button className=\"cell-player\" onClick={this.props.onClick}>X</button>\r\n  \r\n      }\r\n    }\r\n      \r\n  }\r\n  \r\n  class Player {\r\n    constructor(hp, ap, x, y){\r\n      this.hp = hp;\r\n      this.ap = ap;\r\n      this.coords = {\r\n        x: x,\r\n        y: y,\r\n      }\r\n      this.inventory = new Inventory(6);\r\n    }  \r\n  }\r\n  \r\n  class Tile {\r\n    constructor(x, y){    \r\n      this.coords = {\r\n        x: x,\r\n        y: y,\r\n      }\r\n      this.characters = [];\r\n      this.items = [];\r\n    }    \r\n  }\r\n  \r\n  class Phase {\r\n    constructor(){\r\n      this.turn = 1;\r\n      this.isNight = false;\r\n    }\r\n    untilTextTurn = SETTINGS.DURATION_TURN;\r\n  }\r\n  \r\n  class Item {\r\n    constructor(id, name){\r\n      this.id = id;\r\n      this.name = name;\r\n    }\r\n  }\r\n  \r\n  class Inventory {\r\n    constructor(inventorySize){\r\n      this.size = inventorySize;\r\n      this.slots = new Array(inventorySize);\r\n      for (var i=0; i<this.slots.length; i++ ){\r\n        this.slots[i] = ITEM_REGISTRY[0];\r\n      }\r\n    }\r\n  }\r\n  \r\n  const ITEM_REGISTRY = [\r\n    new Item(0, \" \"),\r\n    new Item(1, \"Log\"),\r\n    new Item(2, \"Iron Ore\"),\r\n    new Item(3, \"Stone\"),\r\n    new Item(4, \"Flint\"),\r\n    new Item(5, \"Stick\"),\r\n    new Item(6, \"Jade\"),\r\n    new Item(7, \"Fruits\"),\r\n    new Item(8, \"Nuts\"),\r\n    new Item(9, \"Broken metal plates\"),\r\n    new Item(10, \"Broken coil\"),\r\n  ]\r\n  \r\n  const SETTINGS = {\r\n    DURATION_TURN: 5,\r\n    POSITION_START: {x: 5, y: 5},\r\n    INVENTORY_SIZE: 6,\r\n    PLAYER_HP_MAX: 100,\r\n    PLAYER_AP_MAX: 4,\r\n  }\r\n\r\n  export default Game;","import React from 'react';\nimport '../styles/App.css';\nimport Game from './Game.js';\n\nfunction App() {\n  return (\n    <Game />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}