{"version":3,"sources":["constants/ALERT_VARIANTS.ts","components/CellTile.tsx","components/Map.tsx","constants/SETTINGS.ts","components/StatusBar.tsx","components/ActionTile.tsx","components/ActionBar.tsx","components/AlertBar.tsx","models/AlertText.ts","constants/ALERT_TEXTS.ts","types/ItemRarity.ts","models/Blueprint.ts","models/Item.ts","constants/ITEMS.ts","styles/Colors.ts","constants/BLUEPRINTS.ts","models/Tiletype.ts","constants/TILETYPES.ts","models/Cell.ts","models/Phase.ts","models/Player.ts","models/UserPrompt.ts","models/Construction.ts","utils/ItemUtils.ts","components/ItemTile.tsx","components/InventoryBarList.tsx","components/InventoryBarWrapper.tsx","components/CellBarList.tsx","components/CellBarWrapper.tsx","components/CraftBarList.tsx","components/CraftBarWrapper.tsx","components/ItemBar.tsx","models/CraftCombination.ts","constants/CRAFT_COMBINATIONS.ts","components/BlueprintItem.tsx","components/ConstructionCard.tsx","components/ConstructionCardWrapper.tsx","components/ConstructionBar.tsx","components/Game.tsx","utils/GameUtils.ts","components/App.tsx","reportWebVitals.js","index.js"],"names":["ALERT_VARIANT","CellTile","styled","button","props","characters","length","tiletype","color","Map","tiles","onClick","Cells","row","col","handleClickTileBound","bind","push","type","className","SETTINGS","x","y","StatusBar","phase","turn","untilNextTurn","ap","hp","ActionTile","input","ActionBar","onClickSearch","onClickCraft","value","AlertBar","alertText","isVisible","Alert","show","variant","Heading","header","body","AlertText","this","ItemRarity","ALERT_TEXTS","START","PRIMARY","OUT_OF_AP","WARNING","CRAFT_NO_COMBINATION","CRAFT_NO_ITEMS","CRAFT_SUCCESS","SUCCESS","Blueprint","id","name","defenseBase","itemsToConstruct","Item","rarity","Colors","ITEMS","UBIQUITOUS","COMMON","RARE","UNCOMMON","SCARCE","UNIQUE","BLUEPRINTS","Tiletype","TILETYPES","Cell","coords","items","Phase","isNight","Player","itemsMax","UserPromt","alertActive","untilAlertDismissed","Construction","blueprint","amount","generateItem","randomRarityGroupItems","getRarityGroupItems","randomizeRarityGroup","Math","floor","random","itemSubset","i","randomNumber","ItemTile","p","ITEM_UBIQUITOUS","ITEM_COMMON","ITEM_UNCOMMON","ITEM_RARE","ITEM_SCARCE","ITEM_UNIQUE","InventoryBarList","droppableId","isDropDisabled","provided","droppableProps","ref","innerRef","map","item","index","draggableId","draggableProps","dragHandleProps","placeholder","InventoryBarWrapper","onDragEnd","CellBarList","CellBarWrapper","CraftBarList","construction","CraftBarWrapper","ItemBar","onClickInventory","onClickCell","isInside","CraftCombination","itemCombination","itemResult","CRAFT_COMBINATIONS","BlueprintItem","div","ConstructionCard","CONSTRUCTIONS_BUILT","CONSTRUCTIONS_NOT_BUILT","CONSTRUCTIONS_BUILT_BORDER","CONSTRUCTIONS_NOT_BUILT_BORDER","ConstructionCardWrapper","defenseTotal","colSpan","ConstructionBar","constructions","Game","initialState","initialTiles","Array","initialCharacters","initialPhase","initialConstructions","engineeringBay","starship","emergencyBeaconUnfinished","userPrompt","generateInitialState","useState","setCharacters","setPhase","setTiles","setConstructions","setUserPrompt","setIsInside","gameLoop","updatedCharacters","updatedPhase","updatedUserPrompt","handleDisplayAlert","alert","distCellToCharacter","max","abs","useEffect","setInterval","updatedTiles","oldX","oldY","slot","splice","result","destination","updatedConstruction","source","from","reorderedItem","itemsSource","itemsDestination","updatedConstructions","isCraftSuccessful","forEach","craftCombination","itemCheckSuccessful","itemCheckTemporaryPool","includes","indexOf","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08547085.chunk.js","sourcesContent":["export enum ALERT_VARIANT {\r\n  WARNING = \"warning\",\r\n  PRIMARY = \"primary\",\r\n  SUCCESS = \"success\",\r\n}\r\n","import styled from \"styled-components\";\r\nimport { Player } from \"../models/Player\";\r\nimport { Tiletype } from \"../models/Tiletype\";\r\n\r\ninterface CellTileProps {\r\n  characters: Player[];\r\n  tiletype: Tiletype;\r\n  onClick: React.MouseEventHandler;\r\n}\r\n\r\nexport const CellTile = styled.button<CellTileProps>`\r\n  width: 9%;\r\n  height: 9%;\r\n  font-size: ${(props) => (props.characters.length === 0 ? \"8px\" : \"8px\")};\r\n  background: ${(props) =>\r\n    props.characters.length === 0\r\n      ? props.tiletype.color\r\n      : \"repeating-linear-gradient(45deg, white, white 10px, \" +\r\n        props.tiletype.color +\r\n        \" 10px,  \" +\r\n        props.tiletype.color +\r\n        \" 20px)\"};\r\n  color: ${(props) => (props.characters.length === 0 ? \"black\" : \"white\")};\r\n  font-weight: ${(props) =>\r\n    props.characters.length === 0 ? \"normal\" : \"bold\"};\r\n  border: 1px solid white;\r\n  border-collapse: collapse;\r\n  border-radius: 5px;\r\n`;\r\n","import React from \"react\";\r\nimport { Cell } from \"../models/Cell\";\r\nimport { CellTile } from \"./CellTile\";\r\n\r\ninterface MapProps {\r\n  tiles: Cell[][];\r\n  onClick: (col: number, row: number) => void;\r\n}\r\n\r\nexport const Map: React.FC<MapProps> = ({ tiles, onClick }) => {\r\n  const Cells = [];\r\n\r\n  for (let row = 0; row < tiles.length; row++) {\r\n    for (let col = 0; col < tiles[row].length; col++) {\r\n      const handleClickTileBound = onClick.bind(this, col, row);\r\n      Cells.push(\r\n        <CellTile\r\n          key={\"Cell\" + col + \":\" + row}\r\n          tiletype={tiles[col][row].type}\r\n          characters={tiles[col][row].characters}\r\n          onClick={handleClickTileBound}\r\n        >\r\n          {tiles[col][row].characters.length !== 0\r\n            ? \"X\"\r\n            : \"(\" + col + \",\" + row + \")\"}\r\n        </CellTile>\r\n      );\r\n    }\r\n    Cells.push(<br key={\"LineBreak\" + row} />);\r\n  }\r\n  return <span className=\"map\">{Cells}</span>;\r\n};\r\n","export const SETTINGS = {\r\n  DURATION_TURN: 3,\r\n  POSITION_START: { x: 5, y: 5 },\r\n  INVENTORY_SIZE: 6,\r\n  PLAYER_HP_MAX: 100,\r\n  PLAYER_AP_MAX: 20,\r\n  DURATION_ALERT: 5,\r\n};\r\n","import React from \"react\";\r\nimport { Phase } from \"../models/Phase\";\r\nimport { Player } from \"../models/Player.js\";\r\nimport { SETTINGS } from \"../constants/SETTINGS\";\r\n\r\ninterface StatusBarProps {\r\n  phase: Phase;\r\n  characters: Player[];\r\n}\r\n\r\nexport const StatusBar: React.FC<StatusBarProps> = ({ phase, characters }) => {\r\n  return (\r\n    <span className=\"statusbar\">\r\n      <b>Status bar</b>\r\n      <br />\r\n      Turn: {phase.turn} (00:00:0{phase.untilNextTurn})\r\n      <br />\r\n      Action Points: {characters[0].ap} / {SETTINGS.PLAYER_AP_MAX}\r\n      <br />\r\n      Health Points: {characters[0].hp} / {SETTINGS.PLAYER_HP_MAX}\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </span>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\ninterface ActionTileProps {\r\n  type: string;\r\n  value: string;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const ActionTile = styled.input<ActionTileProps>`\r\n  width: 150px;\r\n  height: 40px;\r\n  margin: 3px 3px 3px 3px;\r\n  background-color: rgb(102, 217, 255);\r\n  border-radius: 5px;\r\n  border: 2px solid rgb(204, 242, 255);\r\n  color: white;\r\n  font-size: 14px;\r\n`;\r\n","import React from \"react\";\r\nimport { ActionTile } from \"./ActionTile\";\r\n\r\ninterface ActionBarProps {\r\n  onClickSearch: () => void;\r\n  onClickCraft: () => void;\r\n}\r\n\r\nexport const ActionBar: React.FC<ActionBarProps> = ({\r\n  onClickSearch,\r\n  onClickCraft,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <b>Actions</b>\r\n      <br />\r\n      <ActionTile type=\"button\" value=\"Search\" onClick={onClickSearch} />\r\n      <ActionTile type=\"button\" value=\"Craft\" onClick={onClickCraft} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { AlertText } from \"../models/AlertText\";\r\n\r\ninterface AlertBarProps {\r\n  alertText: AlertText;\r\n  isVisible: boolean;\r\n}\r\n\r\nexport const AlertBar: React.FC<AlertBarProps> = ({ alertText, isVisible }) => {\r\n  return (\r\n    <span className=\"alertbar\">\r\n      <Alert key=\"mainAlert\" show={isVisible} variant={alertText.variant}>\r\n        <Alert.Heading>{alertText.header}</Alert.Heading>\r\n        {alertText.body}\r\n      </Alert>\r\n    </span>\r\n  );\r\n};\r\n","export class AlertText {\r\n  header: string;\r\n  body: string;\r\n  variant: string;\r\n\r\n  constructor(header: string, body: string, variant: string) {\r\n    this.header = header;\r\n    this.body = body;\r\n    this.variant = variant;\r\n  }\r\n}\r\n","import { AlertText } from \"../models/AlertText\";\r\nimport { ALERT_VARIANT } from \"./ALERT_VARIANTS\";\r\n\r\nexport const ALERT_TEXTS = {\r\n  START: new AlertText(\r\n    \"Your starship was heavily damaged during an orbital fight...\",\r\n    \"Pilots managed to perform an emergency landing on the planet below. The vessel is irreversibly damaged. Fellow crew is dead. Endless jungle covering the entire surface.\",\r\n    ALERT_VARIANT.PRIMARY\r\n  ),\r\n  OUT_OF_AP: new AlertText(\r\n    \"Out of Action Points\",\r\n    \"You are too tired to perform this action and need to chill for a  while. AP recover with time. Action Points recover gradually with time.\",\r\n    ALERT_VARIANT.WARNING\r\n  ),\r\n  CRAFT_NO_COMBINATION: new AlertText(\r\n    \"Engeneering Attempt Failed\",\r\n    \"You tried to tinker around with these items with no palpable success. It looks like you can't combine them into anything more or less interesting.\",\r\n    ALERT_VARIANT.WARNING\r\n  ),\r\n  CRAFT_NO_ITEMS: new AlertText(\r\n    \"Not Enough Items\",\r\n    \"Load at least 2 items in the Engineering Bay in order to process them.\",\r\n    ALERT_VARIANT.WARNING\r\n  ),\r\n  CRAFT_SUCCESS: new AlertText(\r\n    \"Engeneering Attempt Successful\",\r\n    \"You managed to process materials into a structurally more complex item.\",\r\n    ALERT_VARIANT.SUCCESS\r\n  ),\r\n};\r\n","export enum ItemRarity {\r\n  UBIQUITOUS = \"UBIQUITOUS\",\r\n  COMMON = \"COMMON\",\r\n  UNCOMMON = \"UNCOMMON\",\r\n  RARE = \"RARE\",\r\n  SCARCE = \"SCARCE\",\r\n  UNIQUE = \"UNIQUE\",\r\n}\r\n","import { Item } from \"./Item\";\r\n\r\nexport class Blueprint {\r\n  id: number;\r\n  name: string;\r\n  defenseBase: number;\r\n  itemsToConstruct?: Item[];\r\n\r\n  constructor(\r\n    id: number,\r\n    name: string,\r\n    defenseBase: number,\r\n    itemsToConstruct?: Item[]\r\n  ) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.defenseBase = defenseBase;\r\n    this.itemsToConstruct = itemsToConstruct;\r\n  }\r\n}\r\n","import { ItemRarity } from \"../types/ItemRarity\";\r\n\r\nexport class Item {\r\n  id: number;\r\n  name: string;\r\n  rarity: ItemRarity;\r\n\r\n  constructor(id: number, name: string, rarity: ItemRarity) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.rarity = rarity;\r\n  }\r\n}\r\n","import { Item } from \"../models/Item\";\r\nimport { ItemRarity } from \"../types/ItemRarity\";\r\n\r\nexport const ITEMS = [\r\n  new Item(0, \"Log\", ItemRarity.UBIQUITOUS),\r\n  new Item(1, \"Plank\", ItemRarity.COMMON),\r\n  new Item(2, \"Wooden Beam\", ItemRarity.RARE),\r\n  new Item(3, \"Iron Ore\", ItemRarity.COMMON),\r\n  new Item(4, \"Iron Bar\", ItemRarity.UNCOMMON),\r\n  new Item(5, \"Iron Sheet\", ItemRarity.RARE),\r\n  new Item(6, \"Broken Circuit Board\", ItemRarity.UNCOMMON),\r\n  new Item(7, \"Electronic Plate\", ItemRarity.SCARCE),\r\n  new Item(8, \"Transistor Radio\", ItemRarity.UNIQUE),\r\n  new Item(9, \"Copper Ore\", ItemRarity.COMMON),\r\n  new Item(10, \"Copper Wire\", ItemRarity.SCARCE),\r\n  new Item(11, \"Antenna\", ItemRarity.UNIQUE),\r\n];\r\n","export enum Colors {\r\n  ITEM_UBIQUITOUS = \"rgb(206, 188, 160)\",\r\n  ITEM_COMMON = \"rgb(148, 148, 184)\",\r\n  ITEM_UNCOMMON = \"rgb(151, 184, 250)\",\r\n  ITEM_RARE = \"rgb(255, 181, 54)\",\r\n  ITEM_SCARCE = \"rgb(242, 114, 114)\",\r\n  ITEM_UNIQUE = \"rgb(227, 0, 91)\",\r\n  CONSTRUCTIONS_BUILT = \"rgb(92, 92, 92)\",\r\n  CONSTRUCTIONS_BUILT_BORDER = \"rgb(0, 0, 0)\",\r\n  CONSTRUCTIONS_NOT_BUILT = \"rgb(238, 238, 238)\",\r\n  CONSTRUCTIONS_NOT_BUILT_BORDER = \"rgb(199, 199, 199)\",\r\n}\r\n","import { Blueprint } from \"../models/Blueprint\";\r\nimport { ITEMS } from \"./ITEMS\";\r\n\r\nexport const BLUEPRINTS = [\r\n  new Blueprint(0, \"Starship\", 100),\r\n  new Blueprint(1, \"Engineering Bay\", 20),\r\n  new Blueprint(2, \"Emergency Beacon\", 0, [\r\n    ITEMS[10],\r\n    ITEMS[8],\r\n    ITEMS[5],\r\n    ITEMS[2],\r\n  ]),\r\n];\r\n","export class Tiletype {\r\n  id: number;\r\n  name: string;\r\n  color: string;\r\n\r\n  constructor(id: number, name: string, color: string) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.color = color;\r\n  }\r\n}\r\n","import { Tiletype } from \"../models/Tiletype\";\r\n\r\nexport const TILETYPES = [\r\n  new Tiletype(0, \"Forest\", \"#32a871\"),\r\n  new Tiletype(1, \"Starship\", \"#929da6\"),\r\n  new Tiletype(2, \"Impact Cleaning\", \"#76a693\"),\r\n];\r\n","import { Item } from \"./Item\";\r\nimport { Player } from \"./Player\";\r\nimport { Tiletype } from \"./Tiletype\";\r\n\r\nexport class Cell {\r\n  type: Tiletype;\r\n  coords: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n  characters: Player[];\r\n  items: Item[];\r\n\r\n  constructor(type: Tiletype, x: number, y: number) {\r\n    this.type = type;\r\n    this.coords = {\r\n      x: x,\r\n      y: y,\r\n    };\r\n    this.characters = [];\r\n    this.items = [];\r\n  }\r\n}\r\n","import { SETTINGS } from \"../constants/SETTINGS\";\r\n\r\nexport class Phase {\r\n  turn: number;\r\n  untilNextTurn: number;\r\n  isNight: boolean;\r\n\r\n  constructor() {\r\n    this.turn = 1;\r\n    this.untilNextTurn = SETTINGS.DURATION_TURN - 1;\r\n    this.isNight = false;\r\n  }\r\n}\r\n","import { Item } from \"./Item\";\r\n\r\nexport class Player {\r\n  id: number;\r\n  hp: number;\r\n  ap: number;\r\n  coords: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n  items: Item[];\r\n  itemsMax: number;\r\n\r\n  constructor(\r\n    id: number,\r\n    hp: number,\r\n    ap: number,\r\n    x: number,\r\n    y: number,\r\n    itemsMax: number\r\n  ) {\r\n    this.id = id;\r\n    this.hp = hp;\r\n    this.ap = ap;\r\n    this.coords = {\r\n      x: x,\r\n      y: y,\r\n    };\r\n    this.itemsMax = itemsMax;\r\n    this.items = [] as Item[];\r\n  }\r\n}\r\n","import { ALERT_TEXTS } from \"../constants/ALERT_TEXTS\";\r\nimport { AlertText } from \"./AlertText\";\r\n\r\nexport class UserPromt {\r\n  alertActive: AlertText;\r\n  untilAlertDismissed: number;\r\n\r\n  constructor() {\r\n    this.alertActive = ALERT_TEXTS.START;\r\n    this.untilAlertDismissed = 600;\r\n  }\r\n}\r\n","import { Blueprint } from \"./Blueprint\";\r\nimport { Item } from \"./Item\";\r\n\r\nexport class Construction {\r\n  id: number;\r\n  blueprint: Blueprint;\r\n  amount: number;\r\n  items: Item[];\r\n\r\n  constructor(id: number, blueprint: Blueprint, amount: number) {\r\n    this.id = id;\r\n    this.blueprint = blueprint;\r\n    this.amount = amount;\r\n    this.items = [];\r\n  }\r\n}\r\n","import { ItemRarity } from \"../types/ItemRarity\";\r\nimport { ITEMS } from \"../constants/ITEMS\";\r\nimport { Item } from \"../models/Item\";\r\n\r\nexport const generateItem = (): Item => {\r\n  const randomRarityGroupItems = getRarityGroupItems(randomizeRarityGroup());\r\n  const randomIndex = Math.floor(Math.random() * randomRarityGroupItems.length);\r\n  return randomRarityGroupItems[randomIndex];\r\n};\r\n\r\nconst getRarityGroupItems = (rarity: ItemRarity): Item[] => {\r\n  let itemSubset = [];\r\n\r\n  for (let i = 0; i < ITEMS.length; i++) {\r\n    if (ITEMS[i].rarity === rarity) {\r\n      itemSubset.push(ITEMS[i]);\r\n    }\r\n  }\r\n  return itemSubset;\r\n};\r\n\r\nconst randomizeRarityGroup = (): ItemRarity => {\r\n  const randomNumber = Math.random() * 100;\r\n  let itemRarity: ItemRarity;\r\n  if (randomNumber <= 35) {\r\n    itemRarity = ItemRarity.UBIQUITOUS;\r\n  } else if (randomNumber > 35 && randomNumber <= 65) {\r\n    itemRarity = ItemRarity.COMMON;\r\n  } else if (randomNumber > 65 && randomNumber <= 85) {\r\n    itemRarity = ItemRarity.UNCOMMON;\r\n  } else if (randomNumber > 85 && randomNumber <= 95) {\r\n    itemRarity = ItemRarity.RARE;\r\n  } else {\r\n    itemRarity = ItemRarity.SCARCE;\r\n  }\r\n  return itemRarity;\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { ItemRarity } from \"../types/ItemRarity\";\r\n\r\ninterface ItemTileProps {\r\n  type: string;\r\n  value: string;\r\n  rarity: ItemRarity;\r\n  onClick: (index: number) => void;\r\n}\r\n\r\nexport const ItemTile = styled.input<ItemTileProps>`\r\n  width: 80%;\r\n  height: 40px;\r\n  margin: 3px 3px 3px 3px;\r\n  background-color: ${(p) =>\r\n      p.rarity === ItemRarity.UBIQUITOUS && Colors.ITEM_UBIQUITOUS}\r\n    ${(p) => p.rarity === ItemRarity.COMMON && Colors.ITEM_COMMON}\r\n    ${(p) => p.rarity === ItemRarity.UNCOMMON && Colors.ITEM_UNCOMMON}\r\n    ${(p) => p.rarity === ItemRarity.RARE && Colors.ITEM_RARE}\r\n    ${(p) => p.rarity === ItemRarity.SCARCE && Colors.ITEM_SCARCE}\r\n    ${(p) => p.rarity === ItemRarity.UNIQUE && Colors.ITEM_UNIQUE};\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: white;\r\n  text-align: center;\r\n  font-size: 14px;\r\n`;\r\n","import React from \"react\";\r\nimport { Player } from \"../models/Player\";\r\nimport { ItemTile } from \"./ItemTile\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\ninterface InventoryBarListProps {\r\n  characters: Player[];\r\n  onClick: (slot: number) => void;\r\n  onDragEnd: (result: any) => void;\r\n}\r\n\r\nexport const InventoryBarList: React.FC<InventoryBarListProps> = ({\r\n  characters,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <Droppable\r\n      droppableId=\"items-inventory\"\r\n      isDropDisabled={characters[0].items.length >= characters[0].itemsMax}\r\n    >\r\n      {(provided) => (\r\n        <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n          {characters[0].items.map((item, index) => {\r\n            return (\r\n              <Draggable\r\n                key={index}\r\n                draggableId={\"item-inventory-\" + index}\r\n                index={index}\r\n              >\r\n                {(provided) => (\r\n                  <li\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    <ItemTile\r\n                      type=\"submit\"\r\n                      value={item.name}\r\n                      rarity={item.rarity}\r\n                      onClick={() => onClick(index)}\r\n                    />\r\n                  </li>\r\n                )}\r\n              </Draggable>\r\n            );\r\n          })}\r\n          {provided.placeholder}\r\n        </ul>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Player } from \"../models/Player\";\r\nimport { InventoryBarList } from \"./InventoryBarList\";\r\n\r\ninterface InventoryBarWrapperProps {\r\n  characters: Player[];\r\n  onClick: (slot: number) => void;\r\n  onDragEnd: (result: any) => void;\r\n}\r\n\r\nexport const InventoryBarWrapper: React.FC<InventoryBarWrapperProps> = ({\r\n  characters,\r\n  onClick,\r\n  onDragEnd,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <b>\r\n        Inventory ({characters[0].items.length}/{characters[0].itemsMax})\r\n      </b>\r\n      <br />\r\n\r\n      <InventoryBarList\r\n        characters={characters}\r\n        onClick={onClick}\r\n        onDragEnd={onDragEnd}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Cell } from \"../models/Cell\";\r\nimport { Player } from \"../models/Player\";\r\nimport { ItemTile } from \"./ItemTile\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\ninterface CellBarListProps {\r\n  characters: Player[];\r\n  tiles: Cell[][];\r\n  onClick: (slot: number) => void;\r\n  onDragEnd: (result: any) => void;\r\n}\r\n\r\nexport const CellBarList: React.FC<CellBarListProps> = ({\r\n  characters,\r\n  tiles,\r\n  onClick,\r\n}) => {\r\n  const x = characters[0].coords.x;\r\n  const y = characters[0].coords.y;\r\n\r\n  return (\r\n    <Droppable droppableId=\"items-cell\">\r\n      {(provided) => (\r\n        <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n          {tiles[x][y].items.map((item, index) => {\r\n            return (\r\n              <Draggable\r\n                key={index}\r\n                draggableId={\"item-cell-\" + index}\r\n                index={index}\r\n              >\r\n                {(provided) => (\r\n                  <li\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    <ItemTile\r\n                      type=\"submit\"\r\n                      value={tiles[x][y].items[index].name}\r\n                      rarity={tiles[x][y].items[index].rarity}\r\n                      onClick={() => onClick(index)}\r\n                    />\r\n                  </li>\r\n                )}\r\n              </Draggable>\r\n            );\r\n          })}\r\n          {provided.placeholder}\r\n        </ul>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Cell } from \"../models/Cell\";\r\nimport { Player } from \"../models/Player\";\r\nimport { CellBarList } from \"./CellBarList\";\r\n\r\ninterface CellBarWrapperProps {\r\n  characters: Player[];\r\n  tiles: Cell[][];\r\n  onClick: (slot: number) => void;\r\n  onDragEnd: (result: any) => void;\r\n}\r\n\r\nexport const CellBarWrapper: React.FC<CellBarWrapperProps> = ({\r\n  characters,\r\n  tiles,\r\n  onClick,\r\n  onDragEnd,\r\n}) => {\r\n  const x = characters[0].coords.x;\r\n  const y = characters[0].coords.y;\r\n\r\n  return (\r\n    <div>\r\n      <b>\r\n        {tiles[x][y].type.name} ({x}, {y})\r\n      </b>\r\n      <br />\r\n\r\n      <CellBarList\r\n        characters={characters}\r\n        tiles={tiles}\r\n        onClick={onClick}\r\n        onDragEnd={onDragEnd}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ItemTile } from \"./ItemTile\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { Construction } from \"../models/Construction\";\r\n\r\ninterface CraftBarListProps {\r\n  construction: Construction;\r\n  onClick: (slot: number) => void;\r\n  onDragEnd: (result: any) => void;\r\n}\r\n\r\nexport const CraftBarList: React.FC<CraftBarListProps> = ({\r\n  construction,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <Droppable droppableId=\"items-craft\">\r\n      {(provided) => (\r\n        <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n          {construction.items.map((item, index) => {\r\n            return (\r\n              <Draggable\r\n                key={index}\r\n                draggableId={\"item-craft-\" + index}\r\n                index={index}\r\n              >\r\n                {(provided) => (\r\n                  <li\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    <ItemTile\r\n                      type=\"submit\"\r\n                      value={item.name}\r\n                      rarity={item.rarity}\r\n                      onClick={() => onClick(index)}\r\n                    />\r\n                  </li>\r\n                )}\r\n              </Draggable>\r\n            );\r\n          })}\r\n          {provided.placeholder}\r\n        </ul>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Construction } from \"../models/Construction\";\r\nimport { CraftBarList } from \"./CraftBarList\";\r\n\r\ninterface CraftBarWrapperProps {\r\n  construction: Construction;\r\n  onClick: (slot: number) => void;\r\n  onDragEnd: (result: any) => void;\r\n}\r\n\r\nexport const CraftBarWrapper: React.FC<CraftBarWrapperProps> = ({\r\n  construction,\r\n  onClick,\r\n  onDragEnd,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <b>Engineering Bay</b>\r\n      <br />\r\n\r\n      <CraftBarList\r\n        construction={construction}\r\n        onClick={onClick}\r\n        onDragEnd={onDragEnd}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Cell } from \"../models/Cell\";\r\nimport { Player } from \"../models/Player\";\r\nimport { InventoryBarWrapper } from \"./InventoryBarWrapper\";\r\nimport { CellBarWrapper } from \"./CellBarWrapper\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport { CraftBarWrapper } from \"./CraftBarWrapper\";\r\nimport { Construction } from \"../models/Construction\";\r\n\r\ninterface ItemBarProps {\r\n  characters: Player[];\r\n  tiles: Cell[][];\r\n  construction: Construction;\r\n  onClickInventory: (slot: number) => void;\r\n  onClickCell: (slot: number) => void;\r\n  onDragEnd: (result: any) => void;\r\n  isInside: boolean;\r\n}\r\n\r\nexport const ItemBar: React.FC<ItemBarProps> = ({\r\n  characters,\r\n  tiles,\r\n  construction,\r\n  onClickInventory,\r\n  onClickCell,\r\n  onDragEnd,\r\n  isInside,\r\n}) => {\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <table className=\"itembar\">\r\n        <tbody>\r\n          <tr className=\"itemlists\">\r\n            <td className=\"itemlist\">\r\n              <InventoryBarWrapper\r\n                characters={characters}\r\n                onClick={onClickInventory}\r\n                onDragEnd={onDragEnd}\r\n              />\r\n            </td>\r\n\r\n            <td className=\"itemlist\">\r\n              <CellBarWrapper\r\n                characters={characters}\r\n                tiles={tiles}\r\n                onClick={onClickCell}\r\n                onDragEnd={onDragEnd}\r\n              />\r\n            </td>\r\n            {isInside && (\r\n              <td className=\"itemlist\">\r\n                <CraftBarWrapper\r\n                  construction={construction}\r\n                  onClick={onClickCell}\r\n                  onDragEnd={onDragEnd}\r\n                />\r\n              </td>\r\n            )}\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </DragDropContext>\r\n  );\r\n};\r\n","import { Item } from \"./Item\";\r\n\r\nexport class CraftCombination {\r\n  itemCombination: Item[] = [];\r\n  itemResult: Item;\r\n\r\n  constructor(itemCombination: Item[], itemResult: Item) {\r\n    this.itemCombination = itemCombination;\r\n    this.itemResult = itemResult;\r\n  }\r\n}\r\n","import { CraftCombination } from \"../models/CraftCombination\";\r\nimport { ITEMS } from \"./ITEMS\";\r\n\r\nexport const CRAFT_COMBINATIONS = [\r\n  new CraftCombination([ITEMS[0], ITEMS[0]], ITEMS[1]), // Log -> Plank\r\n  new CraftCombination([ITEMS[1], ITEMS[1]], ITEMS[2]), // Plank -> Wooden Beam\r\n  new CraftCombination([ITEMS[3], ITEMS[3]], ITEMS[4]), // Iron Ore -> Iron Bar\r\n  new CraftCombination([ITEMS[4], ITEMS[4]], ITEMS[5]), // Iron Bar -> Iron Sheet\r\n  new CraftCombination([ITEMS[6], ITEMS[6]], ITEMS[7]), // Broken Circuit -> Electronic Plate\r\n  new CraftCombination([ITEMS[7], ITEMS[7]], ITEMS[8]), // Electronic Plate -> Transistor Radio\r\n  new CraftCombination([ITEMS[9], ITEMS[9]], ITEMS[10]), // Copper Ore -> Copper Wire\r\n  new CraftCombination([ITEMS[10], ITEMS[10]], ITEMS[11]), // Copper Wire -> Antenna\r\n];\r\n","import styled from \"styled-components\";\r\nimport { Colors } from \"../styles/Colors\";\r\nimport { ItemRarity } from \"../types/ItemRarity\";\r\n\r\ninterface BlueprintItemProps {\r\n  rarity: ItemRarity;\r\n}\r\n\r\nexport const BlueprintItem = styled.div<BlueprintItemProps>`\r\n  color: ${(p) => p.rarity === ItemRarity.UNIQUE && Colors.ITEM_UNIQUE}\r\n    ${(p) => p.rarity === ItemRarity.SCARCE && Colors.ITEM_SCARCE}\r\n    ${(p) => p.rarity === ItemRarity.UNCOMMON && Colors.ITEM_UNCOMMON}\r\n    ${(p) => p.rarity === ItemRarity.COMMON && Colors.ITEM_COMMON}\r\n    ${(p) => p.rarity === ItemRarity.UBIQUITOUS && Colors.ITEM_UBIQUITOUS};\r\n  font-weight: bold;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Colors } from \"../styles/Colors\";\r\n\r\ninterface ConstructionCardProps {\r\n  amount: number;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const ConstructionCard = styled.div<ConstructionCardProps>`\r\n  width: 100%;\r\n  margin: 3px 3px 3px 3px;\r\n  margin-right: 0px;\r\n  background-color: ${(p) =>\r\n    p.amount > 0 ? Colors.CONSTRUCTIONS_BUILT : Colors.CONSTRUCTIONS_NOT_BUILT};\r\n  border: 2px solid\r\n    ${(p) =>\r\n      p.amount > 0\r\n        ? Colors.CONSTRUCTIONS_BUILT_BORDER\r\n        : Colors.CONSTRUCTIONS_NOT_BUILT_BORDER};\r\n  border-radius: 5px;\r\n  color: ${(p) => (p.amount > 0 ? \"white\" : \"black\")};\r\n  text-align: center;\r\n  font-size: 14px;\r\n`;\r\n","import React from \"react\";\r\nimport { Item } from \"../models/Item\";\r\nimport { BlueprintItem } from \"./BlueprintItem\";\r\nimport { ConstructionCard } from \"./ConstructionCard\";\r\n\r\ninterface ConstructionCardWrapperProps {\r\n  name: string;\r\n  amount: number;\r\n  defenseTotal: number;\r\n  itemsToConstruct: Item[] | undefined;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const ConstructionCardWrapper: React.FC<ConstructionCardWrapperProps> =\r\n  ({ name, amount, defenseTotal, itemsToConstruct, onClick }) => {\r\n    return (\r\n      <ConstructionCard amount={amount} onClick={onClick}>\r\n        <table className=\"constructioncard-table\">\r\n          <tbody>\r\n            <tr className=\"constructioncard-row\">\r\n              <td className=\"constructioncard-cell\" colSpan={2}>\r\n                <b>{name}</b>\r\n              </td>\r\n            </tr>\r\n            <tr className=\"constructioncard-row\">\r\n              <td className=\"constructioncard-cell\">\r\n                <i>{defenseTotal} DEF</i>\r\n              </td>\r\n              <td className=\"constructioncard-cell\">\r\n                <i>x{amount}</i>\r\n              </td>\r\n            </tr>\r\n            {itemsToConstruct &&\r\n              itemsToConstruct.map((item) => {\r\n                return (\r\n                  <tr>\r\n                    <td colSpan={2}>\r\n                      <BlueprintItem rarity={item.rarity}>\r\n                        {item.name}\r\n                      </BlueprintItem>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </ConstructionCard>\r\n    );\r\n  };\r\n","import React from \"react\";\r\nimport { Construction } from \"../models/Construction\";\r\nimport { ConstructionCardWrapper } from \"./ConstructionCardWrapper\";\r\n\r\ninterface ConstructionBarProps {\r\n  constructions: Construction[];\r\n}\r\n\r\nexport const ConstructionBar: React.FC<ConstructionBarProps> = ({\r\n  constructions,\r\n}) => {\r\n  return (\r\n    <span className=\"constructionbar\">\r\n      <b>Constructions</b>\r\n      <br />\r\n\r\n      {constructions.map((construction, index) => {\r\n        return (\r\n          <ConstructionCardWrapper\r\n            name={construction.blueprint.name}\r\n            defenseTotal={construction.blueprint.defenseBase}\r\n            itemsToConstruct={construction.blueprint.itemsToConstruct}\r\n            amount={construction.amount}\r\n            onClick={() => {}}\r\n          />\r\n        );\r\n      })}\r\n    </span>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"../styles/App.css\";\r\nimport { Map } from \"./Map\";\r\nimport { StatusBar } from \"./StatusBar\";\r\nimport { ActionBar } from \"./ActionBar\";\r\nimport { SETTINGS } from \"../constants/SETTINGS\";\r\nimport { AlertBar } from \"./AlertBar\";\r\nimport { ALERT_TEXTS } from \"../constants/ALERT_TEXTS\";\r\nimport { AlertText } from \"../models/AlertText\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { generateInitialState } from \"../utils/GameUtils\";\r\nimport { generateItem } from \"../utils/ItemUtils\";\r\nimport { ItemBar } from \"./ItemBar\";\r\nimport { CRAFT_COMBINATIONS } from \"../constants/CRAFT_COMBINATIONS\";\r\n\r\nimport { ConstructionBar } from \"./ConstructionBar\";\r\n\r\nexport const Game: React.FC = () => {\r\n  const initialState = generateInitialState();\r\n\r\n  const [characters, setCharacters] = useState(initialState.characters);\r\n  const [phase, setPhase] = useState(initialState.phase);\r\n  const [tiles, setTiles] = useState(initialState.tiles);\r\n  const [constructions, setConstructions] = useState(\r\n    initialState.constructions\r\n  );\r\n  const [userPrompt, setUserPrompt] = useState(initialState.userPrompt);\r\n\r\n  const [isInside, setIsInside] = useState(false);\r\n\r\n  const gameLoop = () => {\r\n    const updatedCharacters = [...characters];\r\n    const updatedPhase = phase;\r\n    const updatedUserPrompt = userPrompt;\r\n\r\n    if (updatedPhase.untilNextTurn > 0) {\r\n      updatedPhase.untilNextTurn -= 1;\r\n    } else {\r\n      updatedPhase.turn += 1;\r\n      updatedPhase.untilNextTurn = SETTINGS.DURATION_TURN - 1;\r\n      updatedCharacters[0].ap < SETTINGS.PLAYER_AP_MAX &&\r\n        (updatedCharacters[0].ap += 1);\r\n    }\r\n\r\n    if (updatedUserPrompt.untilAlertDismissed > 0) {\r\n      updatedUserPrompt.untilAlertDismissed -= 1;\r\n    }\r\n\r\n    setCharacters([...updatedCharacters]);\r\n    setUserPrompt(updatedUserPrompt);\r\n    setPhase(updatedPhase);\r\n  };\r\n\r\n  const handleClickTile = (col: number, row: number) => {\r\n    if (characters[0].ap > 0) {\r\n      if (distCellToCharacter(col, row) === 1) {\r\n        const updatedCharacters = [...characters];\r\n        const updatedTiles = [...tiles];\r\n\r\n        const oldX = characters[0].coords.x;\r\n        const oldY = characters[0].coords.y;\r\n\r\n        updatedCharacters[0].ap -= 1;\r\n\r\n        updatedCharacters[0].coords = {\r\n          x: col,\r\n          y: row,\r\n        };\r\n\r\n        updatedTiles[oldX][oldY].characters = [];\r\n        updatedTiles[col][row].characters.push(updatedCharacters[0]);\r\n\r\n        setCharacters(updatedCharacters);\r\n        setTiles(updatedTiles);\r\n      }\r\n    } else {\r\n      handleDisplayAlert(ALERT_TEXTS.OUT_OF_AP);\r\n    }\r\n  };\r\n\r\n  const handleClickSearch = () => {\r\n    if (characters[0].ap > 0) {\r\n      const updatedCharacters = [...characters];\r\n      const updatedTiles = [...tiles];\r\n\r\n      updatedCharacters[0].ap -= 1;\r\n\r\n      if (characters[0].items.length <= characters[0].itemsMax - 1) {\r\n        updatedCharacters[0].items.push(generateItem());\r\n        setCharacters(updatedCharacters);\r\n      } else {\r\n        const x = characters[0].coords.x;\r\n        const y = characters[0].coords.y;\r\n        updatedTiles[x][y].items.push(generateItem());\r\n\r\n        setCharacters(updatedCharacters);\r\n        setTiles(updatedTiles);\r\n      }\r\n    } else {\r\n      handleDisplayAlert(ALERT_TEXTS.OUT_OF_AP);\r\n    }\r\n  };\r\n\r\n  const handleClickCraft = () => {\r\n    if (constructions[0].items.length < 2) {\r\n      handleDisplayAlert(ALERT_TEXTS.CRAFT_NO_ITEMS);\r\n      return;\r\n    }\r\n\r\n    if (characters[0].ap <= 0) {\r\n      handleDisplayAlert(ALERT_TEXTS.OUT_OF_AP);\r\n      return;\r\n    }\r\n\r\n    const updatedCharacters = [...characters];\r\n    const updatedConstructions = [...constructions];\r\n\r\n    updatedCharacters[0].ap -= 1;\r\n    setCharacters(updatedCharacters);\r\n\r\n    let isCraftSuccessful = false;\r\n\r\n    CRAFT_COMBINATIONS.forEach((craftCombination) => {\r\n      if (\r\n        craftCombination.itemCombination.length ===\r\n        constructions[0].items.length\r\n      ) {\r\n        let itemCheckSuccessful = true;\r\n        const itemCheckTemporaryPool = [...updatedConstructions[0].items];\r\n        craftCombination.itemCombination.forEach((item) => {\r\n          if (itemCheckTemporaryPool.includes(item)) {\r\n            itemCheckTemporaryPool.splice(\r\n              itemCheckTemporaryPool.indexOf(item),\r\n              1\r\n            );\r\n          } else {\r\n            itemCheckSuccessful = false;\r\n          }\r\n        });\r\n\r\n        if (itemCheckSuccessful) {\r\n          updatedConstructions[0].items = [craftCombination.itemResult];\r\n          setConstructions(updatedConstructions);\r\n          isCraftSuccessful = true;\r\n          handleDisplayAlert(ALERT_TEXTS.CRAFT_SUCCESS);\r\n          return;\r\n        }\r\n      }\r\n    });\r\n    if (!isCraftSuccessful) {\r\n      handleDisplayAlert(ALERT_TEXTS.CRAFT_NO_COMBINATION);\r\n    }\r\n  };\r\n\r\n  const handleClickItemInventory = (slot: number) => {\r\n    const x = characters[0].coords.x;\r\n    const y = characters[0].coords.y;\r\n\r\n    const updatedCharacters = [...characters];\r\n    const updatedTiles = [...tiles];\r\n\r\n    updatedTiles[x][y].items.push(characters[0].items[slot]);\r\n    updatedCharacters[0].items.splice(slot, 1);\r\n\r\n    setCharacters(updatedCharacters);\r\n    setTiles(updatedTiles);\r\n  };\r\n\r\n  const handleClickItemTile = (slot: number) => {\r\n    if (characters[0].items.length <= characters[0].itemsMax - 1) {\r\n      const updatedCharacters = [...characters];\r\n      const updatedTiles = [...tiles];\r\n\r\n      const x = characters[0].coords.x;\r\n      const y = characters[0].coords.y;\r\n\r\n      updatedCharacters[0].items.push(tiles[x][y].items[slot]);\r\n      updatedTiles[x][y].items.splice(slot, 1);\r\n\r\n      setCharacters(updatedCharacters);\r\n      setTiles(updatedTiles);\r\n    }\r\n  };\r\n\r\n  const handleDisplayAlert = (alert: AlertText) => {\r\n    const updatedUserPrompt = userPrompt;\r\n\r\n    updatedUserPrompt.alertActive = alert;\r\n    updatedUserPrompt.untilAlertDismissed = SETTINGS.DURATION_ALERT;\r\n\r\n    setUserPrompt(updatedUserPrompt);\r\n  };\r\n\r\n  const handleDragEnd = (result: any) => {\r\n    if (!result.destination) return;\r\n\r\n    const updatedCharacters = [...characters];\r\n    const updatedTiles = [...tiles];\r\n    const updatedConstruction = constructions;\r\n\r\n    const x = characters[0].coords.x;\r\n    const y = characters[0].coords.y;\r\n\r\n    if (result.source.droppableId === result.destination.droppableId) {\r\n      if (result.source.droppableId === \"items-inventory\") {\r\n        const items = Array.from(characters[0].items);\r\n\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        updatedCharacters[0].items = items;\r\n      }\r\n\r\n      if (result.source.droppableId === \"items-cell\") {\r\n        const items = Array.from(tiles[x][y].items);\r\n\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        updatedTiles[x][y].items = items;\r\n      }\r\n\r\n      if (result.source.droppableId === \"items-craft\") {\r\n        const items = Array.from(constructions[0].items);\r\n\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        updatedConstruction[0].items = items;\r\n      }\r\n    }\r\n\r\n    if (result.source.droppableId !== result.destination.droppableId) {\r\n      let itemsSource = Array(0);\r\n      let itemsDestination = Array(0);\r\n\r\n      if (\r\n        result.source.droppableId === \"items-inventory\" &&\r\n        result.destination.droppableId === \"items-cell\"\r\n      ) {\r\n        itemsSource = Array.from(characters[0].items);\r\n        itemsDestination = Array.from(tiles[x][y].items);\r\n\r\n        const [reorderedItem] = itemsSource.splice(result.source.index, 1);\r\n        itemsDestination.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        updatedCharacters[0].items = itemsSource;\r\n        updatedTiles[x][y].items = itemsDestination;\r\n      } else if (\r\n        result.source.droppableId === \"items-cell\" &&\r\n        result.destination.droppableId === \"items-inventory\"\r\n      ) {\r\n        if (characters[0].items.length <= characters[0].itemsMax - 1) {\r\n          itemsSource = Array.from(tiles[x][y].items);\r\n          itemsDestination = Array.from(characters[0].items);\r\n\r\n          const [reorderedItem] = itemsSource.splice(result.source.index, 1);\r\n          itemsDestination.splice(result.destination.index, 0, reorderedItem);\r\n\r\n          updatedTiles[x][y].items = itemsSource;\r\n          updatedCharacters[0].items = itemsDestination;\r\n        }\r\n      }\r\n\r\n      if (\r\n        result.source.droppableId === \"items-inventory\" &&\r\n        result.destination.droppableId === \"items-craft\"\r\n      ) {\r\n        itemsSource = Array.from(characters[0].items);\r\n        itemsDestination = Array.from(constructions[0].items);\r\n\r\n        const [reorderedItem] = itemsSource.splice(result.source.index, 1);\r\n        itemsDestination.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        updatedCharacters[0].items = itemsSource;\r\n        updatedConstruction[0].items = itemsDestination;\r\n      } else if (\r\n        result.source.droppableId === \"items-craft\" &&\r\n        result.destination.droppableId === \"items-inventory\"\r\n      ) {\r\n        if (characters[0].items.length <= characters[0].itemsMax - 1) {\r\n          itemsSource = Array.from(constructions[0].items);\r\n          itemsDestination = Array.from(characters[0].items);\r\n\r\n          const [reorderedItem] = itemsSource.splice(result.source.index, 1);\r\n          itemsDestination.splice(result.destination.index, 0, reorderedItem);\r\n\r\n          updatedConstruction[0].items = itemsSource;\r\n          updatedCharacters[0].items = itemsDestination;\r\n        }\r\n      }\r\n\r\n      if (\r\n        result.source.droppableId === \"items-cell\" &&\r\n        result.destination.droppableId === \"items-craft\"\r\n      ) {\r\n        itemsSource = Array.from(tiles[x][y].items);\r\n        itemsDestination = Array.from(constructions[0].items);\r\n\r\n        const [reorderedItem] = itemsSource.splice(result.source.index, 1);\r\n        itemsDestination.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        updatedTiles[x][y].items = itemsSource;\r\n        updatedConstruction[0].items = itemsDestination;\r\n      } else if (\r\n        result.source.droppableId === \"items-craft\" &&\r\n        result.destination.droppableId === \"items-cell\"\r\n      ) {\r\n        itemsSource = Array.from(constructions[0].items);\r\n        itemsDestination = Array.from(tiles[x][y].items);\r\n\r\n        const [reorderedItem] = itemsSource.splice(result.source.index, 1);\r\n        itemsDestination.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        updatedConstruction[0].items = itemsSource;\r\n        updatedTiles[x][y].items = itemsDestination;\r\n      }\r\n    }\r\n\r\n    setCharacters(updatedCharacters);\r\n    setTiles(updatedTiles);\r\n    setConstructions(updatedConstruction);\r\n  };\r\n\r\n  const distCellToCharacter = (col: number, row: number) => {\r\n    return Math.max(\r\n      Math.abs(tiles[col][row].coords.x - characters[0].coords.x),\r\n      Math.abs(tiles[col][row].coords.y - characters[0].coords.y)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(gameLoop, 1000);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let x = characters[0].coords.x;\r\n    let y = characters[0].coords.y;\r\n    setIsInside(x === 5 && y === 5);\r\n  }, [characters[0].coords.x, characters[0].coords.y]);\r\n\r\n  return (\r\n    <div className=\"ui\">\r\n      <div className=\"ui-row1\">\r\n        <Map tiles={tiles} onClick={handleClickTile} />\r\n        <ItemBar\r\n          characters={characters}\r\n          tiles={tiles}\r\n          construction={constructions[0]}\r\n          onClickInventory={handleClickItemInventory}\r\n          onClickCell={handleClickItemTile}\r\n          onDragEnd={handleDragEnd}\r\n          isInside={isInside}\r\n        />\r\n        {isInside && <ConstructionBar constructions={constructions} />}\r\n      </div>\r\n\r\n      <div className=\"ui-row2\">\r\n        <StatusBar phase={phase} characters={characters} />\r\n        <ActionBar\r\n          onClickSearch={handleClickSearch}\r\n          onClickCraft={handleClickCraft}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"ui-row3\">\r\n        <AlertBar\r\n          alertText={userPrompt.alertActive}\r\n          isVisible={userPrompt.untilAlertDismissed > 0}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import { BLUEPRINTS } from \"../constants/BLUEPRINTS\";\r\nimport { SETTINGS } from \"../constants/SETTINGS\";\r\nimport { TILETYPES } from \"../constants/TILETYPES\";\r\nimport { Cell } from \"../models/Cell\";\r\nimport { Phase } from \"../models/Phase\";\r\nimport { Player } from \"../models/Player\";\r\nimport { UserPromt } from \"../models/UserPrompt\";\r\nimport { Construction } from \"../models/Construction\";\r\n\r\ninterface GameState {\r\n  characters: Player[];\r\n  phase: Phase;\r\n  tiles: Cell[][];\r\n  constructions: Construction[];\r\n  userPrompt: UserPromt;\r\n}\r\n\r\nexport const generateInitialState = (): GameState => {\r\n  let initialTiles = new Array(11);\r\n  for (let col = 0; col < initialTiles.length; col++) {\r\n    initialTiles[col] = new Array(11);\r\n    for (let row = 0; row < initialTiles[col].length; row++) {\r\n      initialTiles[col][row] = new Cell(TILETYPES[0], col, row);\r\n    }\r\n  }\r\n\r\n  initialTiles[5][5].type = TILETYPES[1];\r\n  initialTiles[4][4].type = TILETYPES[2];\r\n  initialTiles[5][4].type = TILETYPES[2];\r\n  initialTiles[6][4].type = TILETYPES[2];\r\n  initialTiles[4][5].type = TILETYPES[2];\r\n  initialTiles[6][5].type = TILETYPES[2];\r\n  initialTiles[4][6].type = TILETYPES[2];\r\n  initialTiles[5][6].type = TILETYPES[2];\r\n  initialTiles[6][6].type = TILETYPES[2];\r\n\r\n  initialTiles[5][5].characters.push(\r\n    new Player(\r\n      1,\r\n      SETTINGS.PLAYER_HP_MAX,\r\n      SETTINGS.PLAYER_AP_MAX,\r\n      SETTINGS.POSITION_START.x,\r\n      SETTINGS.POSITION_START.y,\r\n      6\r\n    )\r\n  );\r\n\r\n  // Initial characters\r\n\r\n  const initialCharacters = [];\r\n  initialCharacters.push(\r\n    new Player(\r\n      1,\r\n      SETTINGS.PLAYER_HP_MAX,\r\n      SETTINGS.PLAYER_AP_MAX,\r\n      SETTINGS.POSITION_START.x,\r\n      SETTINGS.POSITION_START.y,\r\n      6\r\n    )\r\n  );\r\n\r\n  // Initial phase\r\n\r\n  const initialPhase = new Phase();\r\n\r\n  // Initial constructions\r\n\r\n  const initialConstructions = [];\r\n  const engineeringBay = new Construction(0, BLUEPRINTS[0], 1);\r\n  const starship = new Construction(1, BLUEPRINTS[1], 1);\r\n  const emergencyBeaconUnfinished = new Construction(2, BLUEPRINTS[2], 0);\r\n\r\n  initialConstructions.push(engineeringBay);\r\n  initialConstructions.push(starship);\r\n  initialConstructions.push(emergencyBeaconUnfinished);\r\n\r\n  // Initial user prompt\r\n\r\n  const initialUserPrompt = new UserPromt();\r\n\r\n  return {\r\n    characters: initialCharacters,\r\n    phase: initialPhase,\r\n    tiles: initialTiles,\r\n    constructions: initialConstructions,\r\n    userPrompt: initialUserPrompt,\r\n  };\r\n};\r\n","import \"../styles/App.css\";\nimport Game from \"./Game\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst App = () => {\n  return <Game />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App.tsx\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}