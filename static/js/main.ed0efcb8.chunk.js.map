{"version":3,"sources":["components/SETTINGS.js","components/Phase.js","components/Item.js","components/ITEM_REGISTRY.js","components/Inventory.js","components/Player.js","components/Tile.js","components/Tiletype.js","components/TILETYPE_REGISTRY.js","components/Cell.js","components/Map.js","components/StatusBar.js","components/ActionBar.js","components/InventoryBar.js","components/TileBar.js","components/Game.js","components/App.js","reportWebVitals.js","index.js"],"names":["SETTINGS","x","y","Phase","untilTextTurn","this","turn","isNight","Item","id","name","ITEM_REGISTRY","Inventory","inventorySize","size","slots","Array","i","length","Player","hp","ap","coords","inventory","Tile","type","characters","items","Tiletype","TILETYPE_REGISTRY","Cell","props","suffixPlayer","textLabel","suffixTile","className","onClick","React","Component","Map","Cells","row","tiles","col","handleClickTileBound","bind","push","StatusBar","phase","ActionBar","value","InventoryBar","itemListComponents","handleClickItemInventoryBound","TileBar","handleClickItemTileBound","Game","initialTiles","initialCharacters","initialPhase","state","handleClickTile","handleClickSearch","handleClickItemInventory","handleClickItemTile","setInterval","gameLoop","updatedTiles","updatedCharacters","updatedPhase","setState","rowSpan","colSpan","distCellToCharacter","oldCoords","oldX","oldY","alert","fillPosition","randomIndex","Math","floor","random","slot","splice","max","abs","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed0efcb8.chunk.js","sourcesContent":["export const SETTINGS = {\r\n    DURATION_TURN: 5,\r\n    POSITION_START: {x: 5, y: 5},\r\n    INVENTORY_SIZE: 6,\r\n    PLAYER_HP_MAX: 100,\r\n    PLAYER_AP_MAX: 4,\r\n  }","import {SETTINGS} from './SETTINGS.js';\r\n\r\nexport class Phase {\r\n    constructor(){\r\n      this.turn = 1;\r\n      this.isNight = false;\r\n    }\r\n    untilTextTurn = SETTINGS.DURATION_TURN;\r\n  }","export class Item {\r\n    constructor(id, name){\r\n      this.id = id;\r\n      this.name = name;\r\n    }\r\n  } \r\n","import {Item} from './Item.js';\r\n\r\nexport const ITEM_REGISTRY = [\r\n    new Item(0, \" \"),\r\n    new Item(1, \"Log\"),\r\n    new Item(2, \"Iron Ore\"),\r\n    new Item(3, \"Stone\"),\r\n    new Item(4, \"Flint\"),\r\n    new Item(5, \"Stick\"),\r\n    new Item(6, \"Jade\"),\r\n    new Item(7, \"Fruits\"),\r\n    new Item(8, \"Nuts\"),\r\n    new Item(9, \"Broken metal plates\"),\r\n    new Item(10, \"Broken coil\"),   \r\n  ]","import {ITEM_REGISTRY} from './ITEM_REGISTRY.js';\r\n\r\nexport class Inventory {\r\n    constructor(inventorySize){\r\n      this.size = inventorySize;\r\n      this.slots = new Array(inventorySize);\r\n      for (var i=0; i<this.slots.length; i++ ){\r\n        this.slots[i] = ITEM_REGISTRY[0];\r\n      }\r\n    }\r\n  }","import {Inventory} from './Inventory.js';\r\n\r\nexport class Player {\r\n    constructor(hp, ap, x, y){\r\n      this.hp = hp;\r\n      this.ap = ap;\r\n      this.coords = {\r\n        x: x,\r\n        y: y,\r\n      }\r\n      this.inventory = new Inventory(6);\r\n    }  \r\n  }","export class Tile {\r\n    constructor(type, x, y){   \r\n      this.type = type; \r\n      this.coords = {       \r\n        x: x,\r\n        y: y,\r\n      }\r\n      this.characters = [];\r\n      this.items = [];\r\n    }    \r\n  }","export class Tiletype{\r\n    constructor(id, name){\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n}","import {Tiletype} from './Tiletype.js' \r\n\r\nexport const TILETYPE_REGISTRY = [\r\n    new Tiletype(0, 'Forest'),\r\n    new Tiletype(1, 'Starship'),\r\n    new Tiletype(2, 'Impact Cleaning'),\r\n    new Tiletype(3, 'Clearing'),    \r\n  ]","import React from 'react';\r\nimport { TILETYPE_REGISTRY } from './TILETYPE_REGISTRY';\r\n\r\nexport class Cell extends React.Component{\r\n    constructor(props) {\r\n      super(props);       \r\n    }\r\n  \r\n    render(){  \r\n      if (this.props.characters.length === 0){\r\n        var suffixPlayer = \"\";\r\n        var textLabel = \"(\" + this.props.coords.x + \", \" + this.props.coords.y + \")\";\r\n        //var textLabel = this.props.type.name;\r\n      }\r\n      else{\r\n        var suffixPlayer = \"-player\";\r\n        var textLabel = \"X\";\r\n      }   \r\n      switch(this.props.type.name){\r\n        case TILETYPE_REGISTRY[0].name:\r\n          var suffixTile = \"-forest\";          \r\n          break;\r\n        case TILETYPE_REGISTRY[1].name:\r\n          var suffixTile = \"-starship\";\r\n          break;\r\n        case TILETYPE_REGISTRY[2].name:\r\n          var suffixTile = \"-impactclearing\";\r\n          break;\r\n        default:\r\n          var suffixTile = \"\";\r\n          break;\r\n      }      \r\n      return <button \r\n              className={\"tile\" + suffixTile + suffixPlayer} \r\n              onClick={this.props.onClick}>\r\n                {textLabel}\r\n             </button>\r\n    }\r\n      \r\n  }  ","import React from 'react';\r\nimport {Cell} from './Cell.js';\r\n\r\nexport class Map extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n    }\r\n  \r\n    render() {    \r\n      var Cells = [];\r\n      for (var row=0; row<this.props.tiles.length; row++) { \r\n        for (var col=0; col<this.props.tiles[row].length; col++){ \r\n          var handleClickTileBound = this.props.onClick.bind(this, col, row);                            \r\n          Cells.push(<Cell key={\"Cell\" + col + \":\"+ row} \r\n                           coords={{x: col, y: row}} \r\n                           type={this.props.tiles[col][row].type} \r\n                           characters={this.props.tiles[col][row].characters} \r\n                           onClick={handleClickTileBound} />);    \r\n        }  \r\n        Cells.push(<br key={\"LineBreak\" + row} />);      \r\n      }\r\n      return Cells;\r\n    }\r\n  }","import React from 'react';\r\nimport {SETTINGS} from './SETTINGS.js'\r\n\r\nexport class StatusBar extends React.Component{\r\n    render(){\r\n      return(\r\n      <div>\r\n        <b>Status bar</b><br />\r\n        Turn: {this.props.phase.turn} (00:00:0{this.props.phase.untilTextTurn})<br />\r\n        Action points: {this.props.characters[0].ap} / {SETTINGS.PLAYER_AP_MAX}<br /> \r\n        Health points: {this.props.characters[0].hp} / {SETTINGS.PLAYER_HP_MAX}     \r\n      </div>\r\n      )\r\n    }\r\n  }  ","import React from 'react';\r\n\r\nexport class ActionBar extends React.Component{\r\n    render(){\r\n      return(\r\n        <div>\r\n          <b>Actions</b><br/ >\r\n          <input className=\"action\" type=\"button\" value=\"Search\" onClick={this.props.onClick} />\r\n        </div>\r\n      )\r\n    }\r\n  } ","import React from 'react';\r\n\r\nexport class InventoryBar extends React.Component{\r\n    render(){\r\n      var itemListComponents = new Array(this.props.characters[0].inventory.size)\r\n      for (var i=0; i<itemListComponents.length; i++){\r\n        var handleClickItemInventoryBound = this.props.onClick.bind(this, i);\r\n        itemListComponents[i] = <div key={\"ItemInventoryDiv\" + i} >\r\n                                  <input className=\"item\"\r\n                                         type=\"submit\" key={\"ItemInventoryInput\" + i}  \r\n                                         value={this.props.characters[0].inventory.slots[i].name} \r\n                                         onClick={handleClickItemInventoryBound} />\r\n                                </div>\r\n      }\r\n      return( \r\n        <div>\r\n          <b>Inventory</b><br/ >        \r\n          {itemListComponents}          \r\n        </div>\r\n      )\r\n    }\r\n  }","import React from 'react';\r\n\r\nexport class TileBar extends React.Component{\r\n    render(){ \r\n      var x = this.props.characters[0].coords.x;\r\n      var y = this.props.characters[0].coords.y;\r\n      var itemListComponents = new Array(this.props.tiles[x][y].items)\r\n      for (var i=0; i<this.props.tiles[x][y].items.length; i++){\r\n        var handleClickItemTileBound = this.props.onClick.bind(this, i);\r\n        itemListComponents[i] = <div key={\"ItemTileDiv\" + i} >\r\n                                  <input className=\"item\"\r\n                                         type=\"submit\" key={\"ItemTileInput\" + i} \r\n                                         value={this.props.tiles[x][y].items[i].name} \r\n                                         onClick={handleClickItemTileBound}/>\r\n                                </div>\r\n      }     \r\n      return( \r\n        <div>\r\n          <b>{this.props.tiles[x][y].type.name} ({x}, {y})</b><br/>         \r\n          {itemListComponents}          \r\n        </div>\r\n      )\r\n    }\r\n  }","import React from 'react';\r\nimport '../styles/App.css';\r\n\r\nimport {Phase} from './Phase.js';\r\nimport {Player} from './Player.js';\r\nimport {Tile} from './Tile.js';\r\n\r\nimport {Map} from './Map.js';\r\nimport {StatusBar} from './StatusBar.js';\r\nimport {ActionBar} from './ActionBar.js';\r\nimport {InventoryBar} from './InventoryBar.js';\r\nimport {TileBar} from './TileBar.js';\r\n\r\nimport {SETTINGS} from './SETTINGS.js';\r\nimport {ITEM_REGISTRY} from './ITEM_REGISTRY.js';\r\nimport {TILETYPE_REGISTRY} from './TILETYPE_REGISTRY.js';\r\n\r\nclass Game extends React.Component{\r\n    constructor(props){\r\n      super(props);   \r\n  \r\n      var initialTiles = new Array(11);\r\n      for (var col=0; col<initialTiles.length; col++) {     \r\n        initialTiles[col]=new Array(11);    \r\n        for (var row=0; row<initialTiles[col].length; row++){\r\n          initialTiles[col][row] = new Tile(TILETYPE_REGISTRY[0], col, row);\r\n        }\r\n      }\r\n      // Set initial tiles\r\n      initialTiles[5][5].characters.push(new Player(SETTINGS.PLAYER_HP_MAX, SETTINGS.PLAYER_AP_MAX, SETTINGS.POSITION_START.x, SETTINGS.POSITION_START.y));  \r\n      initialTiles[5][5].type = TILETYPE_REGISTRY[1];\r\n      initialTiles[4][4].type = TILETYPE_REGISTRY[2];\r\n      initialTiles[5][4].type = TILETYPE_REGISTRY[2];\r\n      initialTiles[6][4].type = TILETYPE_REGISTRY[2];\r\n      initialTiles[4][5].type = TILETYPE_REGISTRY[2];\r\n      initialTiles[6][5].type = TILETYPE_REGISTRY[2];\r\n      initialTiles[4][6].type = TILETYPE_REGISTRY[2];\r\n      initialTiles[5][6].type = TILETYPE_REGISTRY[2];\r\n      initialTiles[6][6].type = TILETYPE_REGISTRY[2];\r\n      \r\n\r\n      // Set initial characters\r\n      var initialCharacters = [];\r\n      initialCharacters.push(new Player(SETTINGS.PLAYER_HP_MAX, SETTINGS.PLAYER_AP_MAX, SETTINGS.POSITION_START.x, SETTINGS.POSITION_START.y));\r\n  \r\n       // Set initial phase\r\n      var initialPhase = new Phase();\r\n\r\n      this.state = {\r\n        tiles: initialTiles,\r\n        characters: initialCharacters,\r\n        phase: initialPhase,\r\n      };     \r\n  \r\n      this.handleClickTile = this.handleClickTile.bind(this);    \r\n      this.handleClickSearch = this.handleClickSearch.bind(this);   \r\n      this.handleClickItemInventory = this.handleClickItemInventory.bind(this); \r\n      this.handleClickItemTile = this.handleClickItemTile.bind(this); \r\n  \r\n      setInterval(this.gameLoop.bind(this), 1000);\r\n    }\r\n  \r\n  \r\n    gameLoop() {   \r\n      if (this.state.phase.untilTextTurn > 1) {\r\n        var updatedTiles = this.state.tiles\r\n        var updatedCharacters = this.state.characters; \r\n        var updatedPhase = this.state.phase;\r\n  \r\n        updatedPhase.untilTextTurn -= 1;\r\n      }\r\n      else{\r\n        var updatedTiles = this.state.tiles\r\n  \r\n        var updatedCharacters = this.state.characters;    \r\n        if (updatedCharacters[0].ap < 4){\r\n          updatedCharacters[0].ap += 1;\r\n        }    \r\n  \r\n        var updatedPhase = this.state.phase;\r\n        updatedPhase.turn += 1;\r\n        updatedPhase.untilTextTurn = 5;      \r\n      }\r\n  \r\n      this.setState({\r\n        tiles: updatedTiles,\r\n        characters: updatedCharacters,\r\n        phase: updatedPhase,\r\n      });    \r\n    }\r\n  \r\n    render(){      \r\n      return (\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td rowSpan=\"3\">\r\n                <Map tiles={this.state.tiles} onClick={this.handleClickTile} />\r\n              </td>\r\n              <td colSpan=\"2\" className=\"aux-window\">\r\n                <StatusBar phase={this.state.phase} characters={this.state.characters} />\r\n              </td>\r\n            </tr>\r\n            <tr>          \r\n              <td colSpan=\"2\" className=\"aux-window\">\r\n                <ActionBar onClick={this.handleClickSearch} />\r\n              </td>\r\n            </tr>\r\n            <tr>          \r\n              <td className=\"aux-window\">\r\n                <InventoryBar characters={this.state.characters} onClick={this.handleClickItemInventory} />\r\n              </td>\r\n              <td className=\"aux-window\">\r\n                <TileBar tiles={this.state.tiles} characters={this.state.characters} onClick={this.handleClickItemTile} />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      );\r\n    }\r\n  \r\n    handleClickTile(col, row){    \r\n      if (this.state.characters[0].ap > 0){    \r\n        if (this.distCellToCharacter(col, row) === 1){ \r\n          this.state.characters[0].ap -= 1;\r\n  \r\n          var oldCoords = this.state.characters[0].coords;\r\n          var oldX = oldCoords.x;\r\n          var oldY = oldCoords.y;\r\n  \r\n          var updatedCharacters = this.state.characters;\r\n          updatedCharacters[0].coords = {\r\n            x: col, \r\n            y: row,\r\n          }\r\n  \r\n          var updatedTiles = this.state.tiles;\r\n          updatedTiles[oldX][oldY].characters = [];\r\n          updatedTiles[col][row].characters.push(updatedCharacters[0]);\r\n  \r\n          var updatedPhase = this.state.phase;    \r\n  \r\n          this.setState({\r\n            tiles: updatedTiles,\r\n            characters: updatedCharacters,\r\n            phase: updatedPhase,\r\n          });     \r\n        }\r\n      }\r\n      else{\r\n        alert(\"You are out of action points\");\r\n      }    \r\n    } \r\n    \r\n    handleClickSearch() {\r\n      if (this.state.characters[0].ap > 0){  \r\n        this.state.characters[0].ap -= 1 \r\n        var fillPosition = -1;     \r\n        for (var i=0; i<this.state.characters[0].inventory.size; i++){\r\n          if (this.state.characters[0].inventory.slots[i] === ITEM_REGISTRY[0]){\r\n            var fillPosition = i;          \r\n            break;\r\n          }\r\n        }\r\n  \r\n        if (fillPosition !== -1){\r\n          let randomIndex = Math.floor(Math.random() * ITEM_REGISTRY.length);\r\n        \r\n          var updatedCharacters = this.state.characters;\r\n          updatedCharacters[0].inventory.slots[fillPosition] = ITEM_REGISTRY[randomIndex];\r\n          \r\n          var updatedTiles = this.state.tiles;\r\n          var updatedPhase = this.state.phase;    \r\n  \r\n          this.setState({\r\n            tiles: updatedTiles,\r\n            characters: updatedCharacters,\r\n            phase: updatedPhase,\r\n          });     \r\n        }\r\n        else{\r\n          alert(\"Inventory is full\");\r\n        }    \r\n        \r\n      }\r\n      else{\r\n        alert(\"You are out of action points\");\r\n      }\r\n  }\r\n  \r\n  handleClickItemInventory(slot){  \r\n    if (this.state.characters[0].inventory.slots[slot].id != ITEM_REGISTRY[0].id){\r\n      var x = this.state.characters[0].coords.x;\r\n      var y = this.state.characters[0].coords.y;\r\n  \r\n      var updatedCharacters = this.state.characters; \r\n      var updatedTiles = this.state.tiles;\r\n      var updatedPhase = this.state.phase; \r\n  \r\n      updatedTiles[x][y].items.push(this.state.characters[0].inventory.slots[slot])\r\n      updatedCharacters[0].inventory.slots[slot] = ITEM_REGISTRY[0];\r\n  \r\n      this.setState({\r\n        tiles: updatedTiles,\r\n        characters: updatedCharacters,\r\n        phase: updatedPhase,\r\n      }); \r\n    }\r\n  }\r\n    \r\n    handleClickItemTile(slot){  \r\n        var fillPosition = -1;     \r\n        for (var i=0; i<this.state.characters[0].inventory.size; i++){\r\n          if (this.state.characters[0].inventory.slots[i] === ITEM_REGISTRY[0]){\r\n            var fillPosition = i;          \r\n            break;\r\n          }\r\n        }\r\n  \r\n        if (fillPosition !== -1){\r\n          var x = this.state.characters[0].coords.x;\r\n          var y = this.state.characters[0].coords.y;\r\n  \r\n          var updatedCharacters = this.state.characters; \r\n          var updatedTiles = this.state.tiles;\r\n          var updatedPhase = this.state.phase; \r\n  \r\n          updatedCharacters[0].inventory.slots[fillPosition] = this.state.tiles[x][y].items[slot];\r\n          updatedTiles[x][y].items.splice(slot, 1);     \r\n  \r\n          this.setState({\r\n            tiles: updatedTiles,\r\n            characters: updatedCharacters,\r\n            phase: updatedPhase,\r\n          }); \r\n      }\r\n    }\r\n  \r\n    distCellToCharacter(col, row){    \r\n      return Math.max(Math.abs(this.state.tiles[col][row].coords.x - this.state.characters[0].coords.x), Math.abs(this.state.tiles[col][row].coords.y - this.state.characters[0].coords.y));   \r\n    }\r\n  \r\n  }  \r\n  \r\n  export default Game;","import React from 'react';\nimport '../styles/App.css';\nimport Game from './Game.js';\n\nfunction App() {\n  return (\n    <Game />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}